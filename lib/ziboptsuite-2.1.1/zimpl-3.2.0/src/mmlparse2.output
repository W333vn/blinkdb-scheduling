State 106 conflicts: 1 shift/reduce
State 511 conflicts: 4 shift/reduce
State 577 conflicts: 2 shift/reduce
State 578 conflicts: 4 shift/reduce
State 584 conflicts: 1 shift/reduce


Grammar

    0 $accept: stmt $end

    1 stmt: decl_set
    2     | decl_par
    3     | decl_var
    4     | decl_obj
    5     | decl_sub
    6     | decl_sos
    7     | def_numb
    8     | def_strg
    9     | def_bool
   10     | def_set
   11     | exec_do

   12 decl_set: DECLSET NAME ASGN sexpr ';'
   13         | DECLSET NAME '[' idxset ']' ASGN sexpr ';'
   14         | DECLSET NAME '[' idxset ']' ASGN set_entry_list ';'
   15         | DECLSET NAME '[' ']' ASGN set_entry_list ';'

   16 set_entry_list: set_entry
   17               | set_entry_list ',' set_entry
   18               | SUBSETS '(' sexpr ',' cexpr ')'
   19               | SUBSETS '(' sexpr ',' cexpr ',' cexpr ')'
   20               | POWERSET '(' sexpr ')'

   21 set_entry: tuple sexpr

   22 def_numb: DEFNUMB DEFNAME '(' name_list ')' ASGN cexpr ';'

   23 def_strg: DEFSTRG DEFNAME '(' name_list ')' ASGN cexpr ';'

   24 def_bool: DEFBOOL DEFNAME '(' name_list ')' ASGN lexpr ';'

   25 def_set: DEFSET DEFNAME '(' name_list ')' ASGN sexpr ';'

   26 name_list: NAME
   27          | name_list ',' NAME

   28 decl_par: DECLPAR NAME '[' idxset ']' ASGN cexpr_entry_list par_default ';'
   29         | DECLPAR NAME '[' idxset ']' ASGN cexpr ';'
   30         | DECLPAR NAME ASGN par_singleton ';'
   31         | DECLPAR

   32 par_singleton: cexpr_entry_list
   33              | cexpr

   34 par_default: /* empty */
   35            | DEFAULT cexpr

   36 decl_var: DECLVAR NAME '[' idxset ']' var_type lower upper ';'
   37         | DECLVAR NAME var_type lower upper ';'
   38         | DECLVAR NAME '[' idxset ']' IMPLICIT BINARY ';'
   39         | DECLVAR NAME IMPLICIT BINARY ';'
   40         | DECLVAR NAME '[' idxset ']' BINARY priority startval ';'
   41         | DECLVAR NAME BINARY priority startval ';'
   42         | DECLVAR NAME '[' idxset ']' INTEGER lower upper priority startval ';'
   43         | DECLVAR NAME INTEGER lower upper priority startval ';'

   44 var_type: /* empty */
   45         | REAL
   46         | IMPLICIT INTEGER

   47 lower: /* empty */
   48      | CMP_GE cexpr
   49      | CMP_GE '-' INFTY
   50      | CMP_GE IF lexpr THEN cexpr ELSE '-' INFTY END
   51      | CMP_GE IF lexpr THEN '-' INFTY ELSE cexpr END

   52 upper: /* empty */
   53      | CMP_LE cexpr
   54      | CMP_LE INFTY
   55      | CMP_LE IF lexpr THEN cexpr ELSE INFTY END
   56      | CMP_LE IF lexpr THEN INFTY ELSE cexpr END

   57 priority: /* empty */
   58         | PRIORITY cexpr

   59 startval: /* empty */
   60         | STARTVAL cexpr

   61 cexpr_entry_list: cexpr_entry
   62                 | cexpr_entry_list ',' cexpr_entry
   63                 | read
   64                 | matrix_head matrix_body

   65 cexpr_entry: tuple cexpr

   66 matrix_head: WITH cexpr_list WITH

   67 matrix_body: matrix_head cexpr_list WITH
   68            | matrix_body matrix_head cexpr_list WITH

   69 decl_obj: DECLMIN NAME DO vexpr ';'
   70         | DECLMAX NAME DO vexpr ';'

   71 decl_sub: DECLSUB NAME DO constraint_list ';'

   72 constraint_list: constraint
   73                | constraint_list AND constraint
   74                | FORALL idxset DO constraint_list
   75                | IF lexpr THEN constraint_list END
   76                | IF lexpr THEN constraint_list ELSE constraint_list END

   77 constraint: vexpr con_type vexpr con_attr_list
   78           | vexpr con_type cexpr con_attr_list
   79           | cexpr con_type vexpr con_attr_list
   80           | cexpr con_type cexpr con_attr_list
   81           | cexpr con_type vexpr CMP_LE cexpr con_attr_list
   82           | cexpr con_type cexpr CMP_LE cexpr con_attr_list
   83           | cexpr con_type vexpr CMP_GE cexpr con_attr_list
   84           | cexpr con_type cexpr CMP_GE cexpr con_attr_list
   85           | VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type vexpr END con_attr_list
   86           | VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type vexpr END con_attr_list
   87           | VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type vexpr END con_attr_list
   88           | VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type vexpr END con_attr_list
   89           | VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type cexpr END con_attr_list
   90           | VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type vexpr END con_attr_list
   91           | VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type vexpr END con_attr_list
   92           | VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type cexpr END con_attr_list
   93           | VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type vexpr END con_attr_list
   94           | VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type cexpr END con_attr_list
   95           | VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type cexpr END con_attr_list
   96           | VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type vexpr END con_attr_list
   97           | VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type cexpr END con_attr_list
   98           | VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type cexpr END con_attr_list
   99           | VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type cexpr END con_attr_list
  100           | VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type cexpr END con_attr_list
  101           | VIF vbool THEN vexpr con_type vexpr END con_attr_list
  102           | VIF vbool THEN cexpr con_type vexpr END con_attr_list
  103           | VIF vbool THEN vexpr con_type cexpr END con_attr_list
  104           | VIF vbool THEN cexpr con_type cexpr END con_attr_list

  105 vbool: vexpr CMP_NE vexpr
  106      | cexpr CMP_NE vexpr
  107      | vexpr CMP_NE cexpr
  108      | vexpr CMP_EQ vexpr
  109      | cexpr CMP_EQ vexpr
  110      | vexpr CMP_EQ cexpr
  111      | vexpr CMP_LE vexpr
  112      | cexpr CMP_LE vexpr
  113      | vexpr CMP_LE cexpr
  114      | vexpr CMP_GE vexpr
  115      | cexpr CMP_GE vexpr
  116      | vexpr CMP_GE cexpr
  117      | vexpr CMP_LT vexpr
  118      | cexpr CMP_LT vexpr
  119      | vexpr CMP_LT cexpr
  120      | vexpr CMP_GT vexpr
  121      | cexpr CMP_GT vexpr
  122      | vexpr CMP_GT cexpr
  123      | vbool AND vbool
  124      | vbool OR vbool
  125      | vbool XOR vbool
  126      | NOT vbool
  127      | '(' vbool ')'

  128 con_attr_list: /* empty */
  129              | con_attr_list ',' con_attr

  130 con_attr: SCALE
  131         | SEPARATE
  132         | CHECKONLY
  133         | INDICATOR

  134 con_type: CMP_LE
  135         | CMP_GE
  136         | CMP_EQ

  137 vexpr: vproduct
  138      | vexpr '+' vproduct
  139      | vexpr '-' vproduct
  140      | vexpr '+' cproduct
  141      | vexpr '-' cproduct
  142      | cexpr '+' vproduct
  143      | cexpr '-' vproduct

  144 vproduct: vfactor
  145         | vproduct '*' cfactor
  146         | vproduct '/' cfactor
  147         | cproduct '*' vfactor
  148         | vproduct '*' vfactor

  149 vfactor: vexpo
  150        | '+' vfactor
  151        | '-' vfactor

  152 vexpo: vval
  153      | vval POW cfactor
  154      | SUM idxset DO vproduct

  155 vval: VARSYM symidx
  156     | VABS '(' vexpr ')'
  157     | IF lexpr THEN vexpr ELSE vexpr END
  158     | '(' vexpr ')'

  159 decl_sos: DECLSOS NAME DO soset ';'

  160 soset: sos_type priority DO vexpr
  161      | FORALL idxset DO soset

  162 sos_type: /* empty */
  163         | TYPE1
  164         | TYPE2

  165 exec_do: DO command ';'

  166 command: PRINT cexpr_list
  167        | PRINT tuple
  168        | PRINT sexpr
  169        | PRINT VARSYM
  170        | CHECK lexpr
  171        | FORALL idxset DO command

  172 idxset: pure_idxset
  173       | sexpr

  174 pure_idxset: tuple IN sexpr WITH lexpr
  175            | tuple IN sexpr

  176 sexpr: sunion
  177      | sexpr UNION sunion
  178      | sexpr '+' sunion
  179      | sexpr SYMDIFF sunion
  180      | sexpr '-' sunion
  181      | sexpr WITHOUT sunion
  182      | sexpr INTER sunion

  183 sunion: sproduct
  184       | UNION idxset DO sproduct

  185 sproduct: sval
  186         | sproduct CROSS sval
  187         | sproduct '*' sval
  188         | INTER idxset DO sval

  189 sval: SETSYM symidx
  190     | SETDEF '(' cexpr_list ')'
  191     | '{' '}'
  192     | '{' cexpr TO cexpr BY cexpr '}'
  193     | '{' cexpr TO cexpr '}'
  194     | '{' cexpr UNTIL cexpr BY cexpr '}'
  195     | '{' cexpr UNTIL cexpr '}'
  196     | ARGMIN idxset DO cexpr
  197     | ARGMIN '(' cexpr ')' idxset DO cexpr
  198     | ARGMAX idxset DO cexpr
  199     | ARGMAX '(' cexpr ')' idxset DO cexpr
  200     | '(' sexpr ')'
  201     | '{' tuple_list '}'
  202     | '{' cexpr_list '}'
  203     | '{' idxset '}'
  204     | '{' idxset DO cexpr '}'
  205     | '{' idxset DO tuple '}'
  206     | PROJ '(' sexpr ',' tuple ')'
  207     | INDEXSET '(' SETSYM ')'
  208     | IF lexpr THEN sexpr ELSE sexpr END

  209 read: READ cexpr AS cexpr
  210     | read read_par

  211 read_par: SKIP cexpr
  212         | USE cexpr
  213         | COMMENT cexpr
  214         | MATCH cexpr

  215 tuple_list: tuple
  216           | tuple_list ',' tuple
  217           | read

  218 lexpr: cexpr CMP_EQ cexpr
  219      | cexpr CMP_NE cexpr
  220      | cexpr CMP_GT cexpr
  221      | cexpr CMP_GE cexpr
  222      | cexpr CMP_LT cexpr
  223      | cexpr CMP_LE cexpr
  224      | sexpr CMP_EQ sexpr
  225      | sexpr CMP_NE sexpr
  226      | sexpr CMP_GT sexpr
  227      | sexpr CMP_GE sexpr
  228      | sexpr CMP_LT sexpr
  229      | sexpr CMP_LE sexpr
  230      | lexpr AND lexpr
  231      | lexpr OR lexpr
  232      | lexpr XOR lexpr
  233      | NOT lexpr
  234      | '(' lexpr ')'
  235      | tuple IN sexpr
  236      | EXISTS '(' idxset ')'
  237      | BOOLDEF '(' cexpr_list ')'
  238      | IF lexpr THEN lexpr ELSE lexpr END

  239 tuple: CMP_LT CMP_GT
  240      | CMP_LT cexpr_list CMP_GT

  241 symidx: /* empty */
  242       | '[' cexpr_list ']'

  243 cexpr_list: cexpr
  244           | cexpr_list ',' cexpr

  245 cexpr: cproduct
  246      | cexpr '+' cproduct
  247      | cexpr '-' cproduct

  248 cproduct: cfactor
  249         | cproduct '*' cfactor
  250         | cproduct '/' cfactor
  251         | cproduct MOD cfactor
  252         | cproduct DIV cfactor
  253         | PROD idxset DO cfactor

  254 cfactor: cexpo
  255        | '+' cexpo
  256        | '-' cexpo

  257 cexpo: cval
  258      | cval POW cfactor
  259      | SUM idxset DO cproduct
  260      | MIN pure_idxset DO cfactor
  261      | MAX pure_idxset DO cfactor
  262      | MIN '(' idxset ')'
  263      | MAX '(' idxset ')'

  264 cval: NUMB
  265     | STRG
  266     | NAME
  267     | NUMBSYM symidx
  268     | STRGSYM symidx
  269     | NUMBDEF '(' cexpr_list ')'
  270     | STRGDEF '(' cexpr_list ')'
  271     | cval FAC
  272     | CARD '(' sexpr ')'
  273     | ABS '(' cexpr ')'
  274     | SGN '(' cexpr ')'
  275     | ROUND '(' cexpr ')'
  276     | FLOOR '(' cexpr ')'
  277     | CEIL '(' cexpr ')'
  278     | LOG '(' cexpr ')'
  279     | LN '(' cexpr ')'
  280     | EXP '(' cexpr ')'
  281     | SQRT '(' cexpr ')'
  282     | '(' cexpr ')'
  283     | LENGTH '(' cexpr ')'
  284     | SUBSTR '(' cexpr ',' cexpr ',' cexpr ')'
  285     | RANDOM '(' cexpr ',' cexpr ')'
  286     | IF lexpr THEN cexpr ELSE cexpr END
  287     | ORD '(' sexpr ',' cexpr ',' cexpr ')'
  288     | MIN '(' cexpr_list ')'
  289     | MAX '(' cexpr_list ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 18 19 20 22 23 24 25 127 156 158 190 197 199 200 206 207 234
    236 237 262 263 269 270 272 273 274 275 276 277 278 279 280 281
    282 283 284 285 287 288 289
')' (41) 18 19 20 22 23 24 25 127 156 158 190 197 199 200 206 207 234
    236 237 262 263 269 270 272 273 274 275 276 277 278 279 280 281
    282 283 284 285 287 288 289
'*' (42) 145 147 148 187 249
'+' (43) 138 140 142 150 178 246 255
',' (44) 17 18 19 27 62 129 206 216 244 284 285 287
'-' (45) 49 50 51 139 141 143 151 180 247 256
'/' (47) 146 250
';' (59) 12 13 14 15 22 23 24 25 28 29 30 36 37 38 39 40 41 42 43 69
    70 71 159 165
'[' (91) 13 14 15 28 29 36 38 40 42 242
']' (93) 13 14 15 28 29 36 38 40 42 242
'{' (123) 191 192 193 194 195 201 202 203 204 205
'}' (125) 191 192 193 194 195 201 202 203 204 205
error (256)
DECLSET (258) 12 13 14 15
DECLPAR (259) 28 29 30 31
DECLVAR (260) 36 37 38 39 40 41 42 43
DECLMIN (261) 69
DECLMAX (262) 70
DECLSUB (263) 71
DECLSOS (264) 159
DEFNUMB (265) 22
DEFSTRG (266) 23
DEFBOOL (267) 24
DEFSET (268) 25
PRINT (269) 166 167 168 169
CHECK (270) 170
BINARY (271) 38 39 40 41
INTEGER (272) 42 43 46
REAL (273) 45
IMPLICIT (274) 38 39 46
ASGN (275) 12 13 14 15 22 23 24 25 28 29 30
DO (276) 69 70 71 74 154 159 160 161 165 171 184 188 196 197 198 199
    204 205 253 259 260 261
WITH (277) 66 67 68 174
IN (278) 174 175 235
TO (279) 192 193
UNTIL (280) 194 195
BY (281) 192 194
FORALL (282) 74 161 171
EXISTS (283) 236
PRIORITY (284) 58
STARTVAL (285) 60
DEFAULT (286) 35
CMP_LE (287) 53 54 55 56 81 82 111 112 113 134 223 229
CMP_GE (288) 48 49 50 51 83 84 114 115 116 135 221 227
CMP_EQ (289) 108 109 110 136 218 224
CMP_LT (290) 117 118 119 222 228 239 240
CMP_GT (291) 120 121 122 220 226 239 240
CMP_NE (292) 105 106 107 219 225
INFTY (293) 49 50 51 54 55 56
AND (294) 73 123 230
OR (295) 124 231
XOR (296) 125 232
NOT (297) 126 233
SUM (298) 154 259
MIN (299) 260 262 288
MAX (300) 261 263 289
ARGMIN (301) 196 197
ARGMAX (302) 198 199
PROD (303) 253
IF (304) 50 51 55 56 75 76 157 208 238 286
THEN (305) 50 51 55 56 75 76 85 86 87 88 89 90 91 92 93 94 95 96 97
    98 99 100 101 102 103 104 157 208 238 286
ELSE (306) 50 51 55 56 76 85 86 87 88 89 90 91 92 93 94 95 96 97 98
    99 100 157 208 238 286
END (307) 50 51 55 56 75 76 85 86 87 88 89 90 91 92 93 94 95 96 97
    98 99 100 101 102 103 104 157 208 238 286
INTER (308) 182 188
UNION (309) 177 184
CROSS (310) 186
SYMDIFF (311) 179
WITHOUT (312) 181
PROJ (313) 206
MOD (314) 251
DIV (315) 252
POW (316) 153 258
FAC (317) 271
CARD (318) 272
ABS (319) 273
SGN (320) 274
ROUND (321) 275
FLOOR (322) 276
CEIL (323) 277
LOG (324) 278
LN (325) 279
EXP (326) 280
SQRT (327) 281
RANDOM (328) 285
ORD (329) 287
READ (330) 209
AS (331) 209
SKIP (332) 211
USE (333) 212
COMMENT (334) 213
MATCH (335) 214
SUBSETS (336) 18 19
INDEXSET (337) 207
POWERSET (338) 20
VIF (339) 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102
    103 104
VABS (340) 156
TYPE1 (341) 163
TYPE2 (342) 164
LENGTH (343) 283
SUBSTR (344) 284
NUMBSYM (345) 267
STRGSYM (346) 268
VARSYM (347) 155 169
SETSYM (348) 189 207
NUMBDEF (349) 269
STRGDEF (350) 270
BOOLDEF (351) 237
SETDEF (352) 190
DEFNAME (353) 22 23 24 25
NAME (354) 12 13 14 15 26 27 28 29 30 36 37 38 39 40 41 42 43 69 70
    71 159 266
STRG (355) 265
NUMB (356) 264
SCALE (357) 130
SEPARATE (358) 131
CHECKONLY (359) 132
INDICATOR (360) 133


Nonterminals, with rules where they appear

$accept (118)
    on left: 0
stmt (119)
    on left: 1 2 3 4 5 6 7 8 9 10 11, on right: 0
decl_set (120)
    on left: 12 13 14 15, on right: 1
set_entry_list (121)
    on left: 16 17 18 19 20, on right: 14 15 17
set_entry (122)
    on left: 21, on right: 16 17
def_numb (123)
    on left: 22, on right: 7
def_strg (124)
    on left: 23, on right: 8
def_bool (125)
    on left: 24, on right: 9
def_set (126)
    on left: 25, on right: 10
name_list (127)
    on left: 26 27, on right: 22 23 24 25 27
decl_par (128)
    on left: 28 29 30 31, on right: 2
par_singleton (129)
    on left: 32 33, on right: 30
par_default (130)
    on left: 34 35, on right: 28
decl_var (131)
    on left: 36 37 38 39 40 41 42 43, on right: 3
var_type (132)
    on left: 44 45 46, on right: 36 37
lower (133)
    on left: 47 48 49 50 51, on right: 36 37 42 43
upper (134)
    on left: 52 53 54 55 56, on right: 36 37 42 43
priority (135)
    on left: 57 58, on right: 40 41 42 43 160
startval (136)
    on left: 59 60, on right: 40 41 42 43
cexpr_entry_list (137)
    on left: 61 62 63 64, on right: 28 32 62
cexpr_entry (138)
    on left: 65, on right: 61 62
matrix_head (139)
    on left: 66, on right: 64 67 68
matrix_body (140)
    on left: 67 68, on right: 64 68
decl_obj (141)
    on left: 69 70, on right: 4
decl_sub (142)
    on left: 71, on right: 5
constraint_list (143)
    on left: 72 73 74 75 76, on right: 71 73 74 75 76
constraint (144)
    on left: 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94
    95 96 97 98 99 100 101 102 103 104, on right: 72 73
vbool (145)
    on left: 105 106 107 108 109 110 111 112 113 114 115 116 117 118
    119 120 121 122 123 124 125 126 127, on right: 85 86 87 88 89 90
    91 92 93 94 95 96 97 98 99 100 101 102 103 104 123 124 125 126
    127
con_attr_list (146)
    on left: 128 129, on right: 77 78 79 80 81 82 83 84 85 86 87 88
    89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 129
con_attr (147)
    on left: 130 131 132 133, on right: 129
con_type (148)
    on left: 134 135 136, on right: 77 78 79 80 81 82 83 84 85 86 87
    88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104
vexpr (149)
    on left: 137 138 139 140 141 142 143, on right: 69 70 77 78 79
    81 83 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 101 102 103
    105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120
    121 122 138 139 140 141 156 157 158 160
vproduct (150)
    on left: 144 145 146 147 148, on right: 137 138 139 142 143 145
    146 148 154
vfactor (151)
    on left: 149 150 151, on right: 144 147 148 150 151
vexpo (152)
    on left: 152 153 154, on right: 149
vval (153)
    on left: 155 156 157 158, on right: 152 153
decl_sos (154)
    on left: 159, on right: 6
soset (155)
    on left: 160 161, on right: 159 161
sos_type (156)
    on left: 162 163 164, on right: 160
exec_do (157)
    on left: 165, on right: 11
command (158)
    on left: 166 167 168 169 170 171, on right: 165 171
idxset (159)
    on left: 172 173, on right: 13 14 28 29 36 38 40 42 74 154 161
    171 184 188 196 197 198 199 203 204 205 236 253 259 262 263
pure_idxset (160)
    on left: 174 175, on right: 172 260 261
sexpr (161)
    on left: 176 177 178 179 180 181 182, on right: 12 13 18 19 20
    21 25 168 173 174 175 177 178 179 180 181 182 200 206 208 224 225
    226 227 228 229 235 272 287
sunion (162)
    on left: 183 184, on right: 176 177 178 179 180 181 182
sproduct (163)
    on left: 185 186 187 188, on right: 183 184 186 187
sval (164)
    on left: 189 190 191 192 193 194 195 196 197 198 199 200 201 202
    203 204 205 206 207 208, on right: 185 186 187 188
read (165)
    on left: 209 210, on right: 63 210 217
read_par (166)
    on left: 211 212 213 214, on right: 210
tuple_list (167)
    on left: 215 216 217, on right: 201 216
lexpr (168)
    on left: 218 219 220 221 222 223 224 225 226 227 228 229 230 231
    232 233 234 235 236 237 238, on right: 24 50 51 55 56 75 76 157
    170 174 208 230 231 232 233 234 238 286
tuple (169)
    on left: 239 240, on right: 21 65 167 174 175 205 206 215 216 235
symidx (170)
    on left: 241 242, on right: 155 189 267 268
cexpr_list (171)
    on left: 243 244, on right: 66 67 68 166 190 202 237 240 242 244
    269 270 288 289
cexpr (172)
    on left: 245 246 247, on right: 18 19 22 23 29 33 35 48 50 51 53
    55 56 58 60 65 78 79 80 81 82 83 84 86 87 88 89 90 91 92 93 94
    95 96 97 98 99 100 102 103 104 106 107 109 110 112 113 115 116
    118 119 121 122 142 143 192 193 194 195 196 197 198 199 204 209
    211 212 213 214 218 219 220 221 222 223 243 244 246 247 273 274
    275 276 277 278 279 280 281 282 283 284 285 286 287
cproduct (173)
    on left: 248 249 250 251 252 253, on right: 140 141 147 245 246
    247 249 250 251 252 259
cfactor (174)
    on left: 254 255 256, on right: 145 146 153 248 249 250 251 252
    253 258 260 261
cexpo (175)
    on left: 257 258 259 260 261 262 263, on right: 254 255 256
cval (176)
    on left: 264 265 266 267 268 269 270 271 272 273 274 275 276 277
    278 279 280 281 282 283 284 285 286 287 288 289, on right: 257
    258 271


state 0

    0 $accept: . stmt $end

    DECLSET  shift, and go to state 1
    DECLPAR  shift, and go to state 2
    DECLVAR  shift, and go to state 3
    DECLMIN  shift, and go to state 4
    DECLMAX  shift, and go to state 5
    DECLSUB  shift, and go to state 6
    DECLSOS  shift, and go to state 7
    DEFNUMB  shift, and go to state 8
    DEFSTRG  shift, and go to state 9
    DEFBOOL  shift, and go to state 10
    DEFSET   shift, and go to state 11
    DO       shift, and go to state 12

    stmt      go to state 13
    decl_set  go to state 14
    def_numb  go to state 15
    def_strg  go to state 16
    def_bool  go to state 17
    def_set   go to state 18
    decl_par  go to state 19
    decl_var  go to state 20
    decl_obj  go to state 21
    decl_sub  go to state 22
    decl_sos  go to state 23
    exec_do   go to state 24


state 1

   12 decl_set: DECLSET . NAME ASGN sexpr ';'
   13         | DECLSET . NAME '[' idxset ']' ASGN sexpr ';'
   14         | DECLSET . NAME '[' idxset ']' ASGN set_entry_list ';'
   15         | DECLSET . NAME '[' ']' ASGN set_entry_list ';'

    NAME  shift, and go to state 25


state 2

   28 decl_par: DECLPAR . NAME '[' idxset ']' ASGN cexpr_entry_list par_default ';'
   29         | DECLPAR . NAME '[' idxset ']' ASGN cexpr ';'
   30         | DECLPAR . NAME ASGN par_singleton ';'
   31         | DECLPAR .

    NAME  shift, and go to state 26

    $default  reduce using rule 31 (decl_par)


state 3

   36 decl_var: DECLVAR . NAME '[' idxset ']' var_type lower upper ';'
   37         | DECLVAR . NAME var_type lower upper ';'
   38         | DECLVAR . NAME '[' idxset ']' IMPLICIT BINARY ';'
   39         | DECLVAR . NAME IMPLICIT BINARY ';'
   40         | DECLVAR . NAME '[' idxset ']' BINARY priority startval ';'
   41         | DECLVAR . NAME BINARY priority startval ';'
   42         | DECLVAR . NAME '[' idxset ']' INTEGER lower upper priority startval ';'
   43         | DECLVAR . NAME INTEGER lower upper priority startval ';'

    NAME  shift, and go to state 27


state 4

   69 decl_obj: DECLMIN . NAME DO vexpr ';'

    NAME  shift, and go to state 28


state 5

   70 decl_obj: DECLMAX . NAME DO vexpr ';'

    NAME  shift, and go to state 29


state 6

   71 decl_sub: DECLSUB . NAME DO constraint_list ';'

    NAME  shift, and go to state 30


state 7

  159 decl_sos: DECLSOS . NAME DO soset ';'

    NAME  shift, and go to state 31


state 8

   22 def_numb: DEFNUMB . DEFNAME '(' name_list ')' ASGN cexpr ';'

    DEFNAME  shift, and go to state 32


state 9

   23 def_strg: DEFSTRG . DEFNAME '(' name_list ')' ASGN cexpr ';'

    DEFNAME  shift, and go to state 33


state 10

   24 def_bool: DEFBOOL . DEFNAME '(' name_list ')' ASGN lexpr ';'

    DEFNAME  shift, and go to state 34


state 11

   25 def_set: DEFSET . DEFNAME '(' name_list ')' ASGN sexpr ';'

    DEFNAME  shift, and go to state 35


state 12

  165 exec_do: DO . command ';'

    PRINT   shift, and go to state 36
    CHECK   shift, and go to state 37
    FORALL  shift, and go to state 38

    command  go to state 39


state 13

    0 $accept: stmt . $end

    $end  shift, and go to state 40


state 14

    1 stmt: decl_set .

    $default  reduce using rule 1 (stmt)


state 15

    7 stmt: def_numb .

    $default  reduce using rule 7 (stmt)


state 16

    8 stmt: def_strg .

    $default  reduce using rule 8 (stmt)


state 17

    9 stmt: def_bool .

    $default  reduce using rule 9 (stmt)


state 18

   10 stmt: def_set .

    $default  reduce using rule 10 (stmt)


state 19

    2 stmt: decl_par .

    $default  reduce using rule 2 (stmt)


state 20

    3 stmt: decl_var .

    $default  reduce using rule 3 (stmt)


state 21

    4 stmt: decl_obj .

    $default  reduce using rule 4 (stmt)


state 22

    5 stmt: decl_sub .

    $default  reduce using rule 5 (stmt)


state 23

    6 stmt: decl_sos .

    $default  reduce using rule 6 (stmt)


state 24

   11 stmt: exec_do .

    $default  reduce using rule 11 (stmt)


state 25

   12 decl_set: DECLSET NAME . ASGN sexpr ';'
   13         | DECLSET NAME . '[' idxset ']' ASGN sexpr ';'
   14         | DECLSET NAME . '[' idxset ']' ASGN set_entry_list ';'
   15         | DECLSET NAME . '[' ']' ASGN set_entry_list ';'

    ASGN  shift, and go to state 41
    '['   shift, and go to state 42


state 26

   28 decl_par: DECLPAR NAME . '[' idxset ']' ASGN cexpr_entry_list par_default ';'
   29         | DECLPAR NAME . '[' idxset ']' ASGN cexpr ';'
   30         | DECLPAR NAME . ASGN par_singleton ';'

    ASGN  shift, and go to state 43
    '['   shift, and go to state 44


state 27

   36 decl_var: DECLVAR NAME . '[' idxset ']' var_type lower upper ';'
   37         | DECLVAR NAME . var_type lower upper ';'
   38         | DECLVAR NAME . '[' idxset ']' IMPLICIT BINARY ';'
   39         | DECLVAR NAME . IMPLICIT BINARY ';'
   40         | DECLVAR NAME . '[' idxset ']' BINARY priority startval ';'
   41         | DECLVAR NAME . BINARY priority startval ';'
   42         | DECLVAR NAME . '[' idxset ']' INTEGER lower upper priority startval ';'
   43         | DECLVAR NAME . INTEGER lower upper priority startval ';'

    BINARY    shift, and go to state 45
    INTEGER   shift, and go to state 46
    REAL      shift, and go to state 47
    IMPLICIT  shift, and go to state 48
    '['       shift, and go to state 49

    $default  reduce using rule 44 (var_type)

    var_type  go to state 50


state 28

   69 decl_obj: DECLMIN NAME . DO vexpr ';'

    DO  shift, and go to state 51


state 29

   70 decl_obj: DECLMAX NAME . DO vexpr ';'

    DO  shift, and go to state 52


state 30

   71 decl_sub: DECLSUB NAME . DO constraint_list ';'

    DO  shift, and go to state 53


state 31

  159 decl_sos: DECLSOS NAME . DO soset ';'

    DO  shift, and go to state 54


state 32

   22 def_numb: DEFNUMB DEFNAME . '(' name_list ')' ASGN cexpr ';'

    '('  shift, and go to state 55


state 33

   23 def_strg: DEFSTRG DEFNAME . '(' name_list ')' ASGN cexpr ';'

    '('  shift, and go to state 56


state 34

   24 def_bool: DEFBOOL DEFNAME . '(' name_list ')' ASGN lexpr ';'

    '('  shift, and go to state 57


state 35

   25 def_set: DEFSET DEFNAME . '(' name_list ')' ASGN sexpr ';'

    '('  shift, and go to state 58


state 36

  166 command: PRINT . cexpr_list
  167        | PRINT . tuple
  168        | PRINT . sexpr
  169        | PRINT . VARSYM

    CMP_LT    shift, and go to state 59
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 66
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    VARSYM    shift, and go to state 87
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 97
    '{'       shift, and go to state 98

    sexpr       go to state 99
    sunion      go to state 100
    sproduct    go to state 101
    sval        go to state 102
    tuple       go to state 103
    cexpr_list  go to state 104
    cexpr       go to state 105
    cproduct    go to state 106
    cfactor     go to state 107
    cexpo       go to state 108
    cval        go to state 109


state 37

  170 command: CHECK . lexpr

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 116
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 38

  171 command: FORALL . idxset DO command

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    idxset       go to state 121
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 39

  165 exec_do: DO command . ';'

    ';'  shift, and go to state 125


state 40

    0 $accept: stmt $end .

    $default  accept


state 41

   12 decl_set: DECLSET NAME ASGN . sexpr ';'

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 126
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 42

   13 decl_set: DECLSET NAME '[' . idxset ']' ASGN sexpr ';'
   14         | DECLSET NAME '[' . idxset ']' ASGN set_entry_list ';'
   15         | DECLSET NAME '[' . ']' ASGN set_entry_list ';'

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    ']'       shift, and go to state 127
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    idxset       go to state 128
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 43

   30 decl_par: DECLPAR NAME ASGN . par_singleton ';'

    WITH     shift, and go to state 129
    CMP_LT   shift, and go to state 59
    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    READ     shift, and go to state 131
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    par_singleton     go to state 133
    cexpr_entry_list  go to state 134
    cexpr_entry       go to state 135
    matrix_head       go to state 136
    read              go to state 137
    tuple             go to state 138
    cexpr             go to state 139
    cproduct          go to state 106
    cfactor           go to state 107
    cexpo             go to state 108
    cval              go to state 109


state 44

   28 decl_par: DECLPAR NAME '[' . idxset ']' ASGN cexpr_entry_list par_default ';'
   29         | DECLPAR NAME '[' . idxset ']' ASGN cexpr ';'

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    idxset       go to state 140
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 45

   41 decl_var: DECLVAR NAME BINARY . priority startval ';'

    PRIORITY  shift, and go to state 141

    $default  reduce using rule 57 (priority)

    priority  go to state 142


state 46

   43 decl_var: DECLVAR NAME INTEGER . lower upper priority startval ';'

    CMP_GE  shift, and go to state 143

    $default  reduce using rule 47 (lower)

    lower  go to state 144


state 47

   45 var_type: REAL .

    $default  reduce using rule 45 (var_type)


state 48

   39 decl_var: DECLVAR NAME IMPLICIT . BINARY ';'
   46 var_type: IMPLICIT . INTEGER

    BINARY   shift, and go to state 145
    INTEGER  shift, and go to state 146


state 49

   36 decl_var: DECLVAR NAME '[' . idxset ']' var_type lower upper ';'
   38         | DECLVAR NAME '[' . idxset ']' IMPLICIT BINARY ';'
   40         | DECLVAR NAME '[' . idxset ']' BINARY priority startval ';'
   42         | DECLVAR NAME '[' . idxset ']' INTEGER lower upper priority startval ';'

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    idxset       go to state 147
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 50

   37 decl_var: DECLVAR NAME var_type . lower upper ';'

    CMP_GE  shift, and go to state 143

    $default  reduce using rule 47 (lower)

    lower  go to state 148


state 51

   69 decl_obj: DECLMIN NAME DO . vexpr ';'

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 156
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 161
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 52

   70 decl_obj: DECLMAX NAME DO . vexpr ';'

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 163
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 161
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 53

   71 decl_sub: DECLSUB NAME DO . constraint_list ';'

    FORALL   shift, and go to state 164
    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 165
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VIF      shift, and go to state 166
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    constraint_list  go to state 167
    constraint       go to state 168
    vexpr            go to state 169
    vproduct         go to state 157
    vfactor          go to state 158
    vexpo            go to state 159
    vval             go to state 160
    cexpr            go to state 170
    cproduct         go to state 162
    cfactor          go to state 107
    cexpo            go to state 108
    cval             go to state 109


state 54

  159 decl_sos: DECLSOS NAME DO . soset ';'

    FORALL  shift, and go to state 171
    TYPE1   shift, and go to state 172
    TYPE2   shift, and go to state 173

    $default  reduce using rule 162 (sos_type)

    soset     go to state 174
    sos_type  go to state 175


state 55

   22 def_numb: DEFNUMB DEFNAME '(' . name_list ')' ASGN cexpr ';'

    NAME  shift, and go to state 176

    name_list  go to state 177


state 56

   23 def_strg: DEFSTRG DEFNAME '(' . name_list ')' ASGN cexpr ';'

    NAME  shift, and go to state 176

    name_list  go to state 178


state 57

   24 def_bool: DEFBOOL DEFNAME '(' . name_list ')' ASGN lexpr ';'

    NAME  shift, and go to state 176

    name_list  go to state 179


state 58

   25 def_set: DEFSET DEFNAME '(' . name_list ')' ASGN sexpr ';'

    NAME  shift, and go to state 176

    name_list  go to state 180


state 59

  239 tuple: CMP_LT . CMP_GT
  240      | CMP_LT . cexpr_list CMP_GT

    CMP_GT   shift, and go to state 181
    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr_list  go to state 182
    cexpr       go to state 105
    cproduct    go to state 106
    cfactor     go to state 107
    cexpo       go to state 108
    cval        go to state 109


state 60

  259 cexpo: SUM . idxset DO cproduct

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    idxset       go to state 183
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 61

  260 cexpo: MIN . pure_idxset DO cfactor
  262      | MIN . '(' idxset ')'
  288 cval: MIN . '(' cexpr_list ')'

    CMP_LT  shift, and go to state 59
    '('     shift, and go to state 184

    pure_idxset  go to state 185
    tuple        go to state 124


state 62

  261 cexpo: MAX . pure_idxset DO cfactor
  263      | MAX . '(' idxset ')'
  289 cval: MAX . '(' cexpr_list ')'

    CMP_LT  shift, and go to state 59
    '('     shift, and go to state 186

    pure_idxset  go to state 187
    tuple        go to state 124


state 63

  196 sval: ARGMIN . idxset DO cexpr
  197     | ARGMIN . '(' cexpr ')' idxset DO cexpr

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 188
    '{'       shift, and go to state 98

    idxset       go to state 189
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 64

  198 sval: ARGMAX . idxset DO cexpr
  199     | ARGMAX . '(' cexpr ')' idxset DO cexpr

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 190
    '{'       shift, and go to state 98

    idxset       go to state 191
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 65

  253 cproduct: PROD . idxset DO cfactor

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    idxset       go to state 192
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 66

  208 sval: IF . lexpr THEN sexpr ELSE sexpr END
  286 cval: IF . lexpr THEN cexpr ELSE cexpr END

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 193
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 67

  188 sproduct: INTER . idxset DO sval

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    idxset       go to state 194
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 68

  184 sunion: UNION . idxset DO sproduct

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    idxset       go to state 195
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 69

  206 sval: PROJ . '(' sexpr ',' tuple ')'

    '('  shift, and go to state 196


state 70

  272 cval: CARD . '(' sexpr ')'

    '('  shift, and go to state 197


state 71

  273 cval: ABS . '(' cexpr ')'

    '('  shift, and go to state 198


state 72

  274 cval: SGN . '(' cexpr ')'

    '('  shift, and go to state 199


state 73

  275 cval: ROUND . '(' cexpr ')'

    '('  shift, and go to state 200


state 74

  276 cval: FLOOR . '(' cexpr ')'

    '('  shift, and go to state 201


state 75

  277 cval: CEIL . '(' cexpr ')'

    '('  shift, and go to state 202


state 76

  278 cval: LOG . '(' cexpr ')'

    '('  shift, and go to state 203


state 77

  279 cval: LN . '(' cexpr ')'

    '('  shift, and go to state 204


state 78

  280 cval: EXP . '(' cexpr ')'

    '('  shift, and go to state 205


state 79

  281 cval: SQRT . '(' cexpr ')'

    '('  shift, and go to state 206


state 80

  285 cval: RANDOM . '(' cexpr ',' cexpr ')'

    '('  shift, and go to state 207


state 81

  287 cval: ORD . '(' sexpr ',' cexpr ',' cexpr ')'

    '('  shift, and go to state 208


state 82

  207 sval: INDEXSET . '(' SETSYM ')'

    '('  shift, and go to state 209


state 83

  283 cval: LENGTH . '(' cexpr ')'

    '('  shift, and go to state 210


state 84

  284 cval: SUBSTR . '(' cexpr ',' cexpr ',' cexpr ')'

    '('  shift, and go to state 211


state 85

  267 cval: NUMBSYM . symidx

    '['  shift, and go to state 212

    $default  reduce using rule 241 (symidx)

    symidx  go to state 213


state 86

  268 cval: STRGSYM . symidx

    '['  shift, and go to state 212

    $default  reduce using rule 241 (symidx)

    symidx  go to state 214


state 87

  169 command: PRINT VARSYM .

    $default  reduce using rule 169 (command)


state 88

  189 sval: SETSYM . symidx

    '['  shift, and go to state 212

    $default  reduce using rule 241 (symidx)

    symidx  go to state 215


state 89

  269 cval: NUMBDEF . '(' cexpr_list ')'

    '('  shift, and go to state 216


state 90

  270 cval: STRGDEF . '(' cexpr_list ')'

    '('  shift, and go to state 217


state 91

  190 sval: SETDEF . '(' cexpr_list ')'

    '('  shift, and go to state 218


state 92

  266 cval: NAME .

    $default  reduce using rule 266 (cval)


state 93

  265 cval: STRG .

    $default  reduce using rule 265 (cval)


state 94

  264 cval: NUMB .

    $default  reduce using rule 264 (cval)


state 95

  255 cfactor: '+' . cexpo

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '('      shift, and go to state 132

    cexpo  go to state 219
    cval   go to state 109


state 96

  256 cfactor: '-' . cexpo

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '('      shift, and go to state 132

    cexpo  go to state 220
    cval   go to state 109


state 97

  200 sval: '(' . sexpr ')'
  282 cval: '(' . cexpr ')'

    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 66
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 97
    '{'       shift, and go to state 98

    sexpr     go to state 221
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    cexpr     go to state 222
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 98

  191 sval: '{' . '}'
  192     | '{' . cexpr TO cexpr BY cexpr '}'
  193     | '{' . cexpr TO cexpr '}'
  194     | '{' . cexpr UNTIL cexpr BY cexpr '}'
  195     | '{' . cexpr UNTIL cexpr '}'
  201     | '{' . tuple_list '}'
  202     | '{' . cexpr_list '}'
  203     | '{' . idxset '}'
  204     | '{' . idxset DO cexpr '}'
  205     | '{' . idxset DO tuple '}'

    CMP_LT    shift, and go to state 59
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 66
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    READ      shift, and go to state 131
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 97
    '{'       shift, and go to state 98
    '}'       shift, and go to state 223

    idxset       go to state 224
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    read         go to state 225
    tuple_list   go to state 226
    tuple        go to state 227
    cexpr_list   go to state 228
    cexpr        go to state 229
    cproduct     go to state 106
    cfactor      go to state 107
    cexpo        go to state 108
    cval         go to state 109


state 99

  168 command: PRINT sexpr .
  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235

    $default  reduce using rule 168 (command)


state 100

  176 sexpr: sunion .

    $default  reduce using rule 176 (sexpr)


state 101

  183 sunion: sproduct .
  186 sproduct: sproduct . CROSS sval
  187         | sproduct . '*' sval

    CROSS  shift, and go to state 236
    '*'    shift, and go to state 237

    $default  reduce using rule 183 (sunion)


state 102

  185 sproduct: sval .

    $default  reduce using rule 185 (sproduct)


state 103

  167 command: PRINT tuple .

    $default  reduce using rule 167 (command)


state 104

  166 command: PRINT cexpr_list .
  244 cexpr_list: cexpr_list . ',' cexpr

    ','  shift, and go to state 238

    $default  reduce using rule 166 (command)


state 105

  243 cexpr_list: cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 243 (cexpr_list)


state 106

  245 cexpr: cproduct .
  249 cproduct: cproduct . '*' cfactor
  250         | cproduct . '/' cfactor
  251         | cproduct . MOD cfactor
  252         | cproduct . DIV cfactor

    MOD  shift, and go to state 241
    DIV  shift, and go to state 242
    '*'  shift, and go to state 243
    '/'  shift, and go to state 244

    '*'       [reduce using rule 245 (cexpr)]
    $default  reduce using rule 245 (cexpr)


state 107

  248 cproduct: cfactor .

    $default  reduce using rule 248 (cproduct)


state 108

  254 cfactor: cexpo .

    $default  reduce using rule 254 (cfactor)


state 109

  257 cexpo: cval .
  258      | cval . POW cfactor
  271 cval: cval . FAC

    POW  shift, and go to state 245
    FAC  shift, and go to state 246

    $default  reduce using rule 257 (cexpo)


state 110

  236 lexpr: EXISTS . '(' idxset ')'

    '('  shift, and go to state 247


state 111

  233 lexpr: NOT . lexpr

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 248
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 112

  208 sval: IF . lexpr THEN sexpr ELSE sexpr END
  238 lexpr: IF . lexpr THEN lexpr ELSE lexpr END
  286 cval: IF . lexpr THEN cexpr ELSE cexpr END

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 249
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 113

  237 lexpr: BOOLDEF . '(' cexpr_list ')'

    '('  shift, and go to state 250


state 114

  200 sval: '(' . sexpr ')'
  234 lexpr: '(' . lexpr ')'
  282 cval: '(' . cexpr ')'

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 251
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 252
    tuple     go to state 117
    cexpr     go to state 253
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 115

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  224 lexpr: sexpr . CMP_EQ sexpr
  225      | sexpr . CMP_NE sexpr
  226      | sexpr . CMP_GT sexpr
  227      | sexpr . CMP_GE sexpr
  228      | sexpr . CMP_LT sexpr
  229      | sexpr . CMP_LE sexpr

    CMP_LE   shift, and go to state 254
    CMP_GE   shift, and go to state 255
    CMP_EQ   shift, and go to state 256
    CMP_LT   shift, and go to state 257
    CMP_GT   shift, and go to state 258
    CMP_NE   shift, and go to state 259
    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235


state 116

  170 command: CHECK lexpr .
  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr

    AND  shift, and go to state 260
    OR   shift, and go to state 261
    XOR  shift, and go to state 262

    $default  reduce using rule 170 (command)


state 117

  235 lexpr: tuple . IN sexpr

    IN  shift, and go to state 263


state 118

  218 lexpr: cexpr . CMP_EQ cexpr
  219      | cexpr . CMP_NE cexpr
  220      | cexpr . CMP_GT cexpr
  221      | cexpr . CMP_GE cexpr
  222      | cexpr . CMP_LT cexpr
  223      | cexpr . CMP_LE cexpr
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 264
    CMP_GE  shift, and go to state 265
    CMP_EQ  shift, and go to state 266
    CMP_LT  shift, and go to state 267
    CMP_GT  shift, and go to state 268
    CMP_NE  shift, and go to state 269
    '+'     shift, and go to state 239
    '-'     shift, and go to state 240


state 119

  208 sval: IF . lexpr THEN sexpr ELSE sexpr END

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 270
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 120

  200 sval: '(' . sexpr ')'

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 221
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 121

  171 command: FORALL idxset . DO command

    DO  shift, and go to state 271


state 122

  172 idxset: pure_idxset .

    $default  reduce using rule 172 (idxset)


state 123

  173 idxset: sexpr .
  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235

    $default  reduce using rule 173 (idxset)


state 124

  174 pure_idxset: tuple . IN sexpr WITH lexpr
  175            | tuple . IN sexpr

    IN  shift, and go to state 272


state 125

  165 exec_do: DO command ';' .

    $default  reduce using rule 165 (exec_do)


state 126

   12 decl_set: DECLSET NAME ASGN sexpr . ';'
  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235
    ';'      shift, and go to state 273


state 127

   15 decl_set: DECLSET NAME '[' ']' . ASGN set_entry_list ';'

    ASGN  shift, and go to state 274


state 128

   13 decl_set: DECLSET NAME '[' idxset . ']' ASGN sexpr ';'
   14         | DECLSET NAME '[' idxset . ']' ASGN set_entry_list ';'

    ']'  shift, and go to state 275


state 129

   66 matrix_head: WITH . cexpr_list WITH

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr_list  go to state 276
    cexpr       go to state 105
    cproduct    go to state 106
    cfactor     go to state 107
    cexpo       go to state 108
    cval        go to state 109


state 130

  286 cval: IF . lexpr THEN cexpr ELSE cexpr END

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 277
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 131

  209 read: READ . cexpr AS cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 278
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 132

  282 cval: '(' . cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 222
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 133

   30 decl_par: DECLPAR NAME ASGN par_singleton . ';'

    ';'  shift, and go to state 279


state 134

   32 par_singleton: cexpr_entry_list .
   62 cexpr_entry_list: cexpr_entry_list . ',' cexpr_entry

    ','  shift, and go to state 280

    $default  reduce using rule 32 (par_singleton)


state 135

   61 cexpr_entry_list: cexpr_entry .

    $default  reduce using rule 61 (cexpr_entry_list)


state 136

   64 cexpr_entry_list: matrix_head . matrix_body

    WITH  shift, and go to state 129

    matrix_head  go to state 281
    matrix_body  go to state 282


state 137

   63 cexpr_entry_list: read .
  210 read: read . read_par

    SKIP     shift, and go to state 283
    USE      shift, and go to state 284
    COMMENT  shift, and go to state 285
    MATCH    shift, and go to state 286

    $default  reduce using rule 63 (cexpr_entry_list)

    read_par  go to state 287


state 138

   65 cexpr_entry: tuple . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 288
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 139

   33 par_singleton: cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 33 (par_singleton)


state 140

   28 decl_par: DECLPAR NAME '[' idxset . ']' ASGN cexpr_entry_list par_default ';'
   29         | DECLPAR NAME '[' idxset . ']' ASGN cexpr ';'

    ']'  shift, and go to state 289


state 141

   58 priority: PRIORITY . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 290
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 142

   41 decl_var: DECLVAR NAME BINARY priority . startval ';'

    STARTVAL  shift, and go to state 291

    $default  reduce using rule 59 (startval)

    startval  go to state 292


state 143

   48 lower: CMP_GE . cexpr
   49      | CMP_GE . '-' INFTY
   50      | CMP_GE . IF lexpr THEN cexpr ELSE '-' INFTY END
   51      | CMP_GE . IF lexpr THEN '-' INFTY ELSE cexpr END

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 293
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 294
    '('      shift, and go to state 132

    cexpr     go to state 295
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 144

   43 decl_var: DECLVAR NAME INTEGER lower . upper priority startval ';'

    CMP_LE  shift, and go to state 296

    $default  reduce using rule 52 (upper)

    upper  go to state 297


state 145

   39 decl_var: DECLVAR NAME IMPLICIT BINARY . ';'

    ';'  shift, and go to state 298


state 146

   46 var_type: IMPLICIT INTEGER .

    $default  reduce using rule 46 (var_type)


state 147

   36 decl_var: DECLVAR NAME '[' idxset . ']' var_type lower upper ';'
   38         | DECLVAR NAME '[' idxset . ']' IMPLICIT BINARY ';'
   40         | DECLVAR NAME '[' idxset . ']' BINARY priority startval ';'
   42         | DECLVAR NAME '[' idxset . ']' INTEGER lower upper priority startval ';'

    ']'  shift, and go to state 299


state 148

   37 decl_var: DECLVAR NAME var_type lower . upper ';'

    CMP_LE  shift, and go to state 296

    $default  reduce using rule 52 (upper)

    upper  go to state 300


state 149

  154 vexpo: SUM . idxset DO vproduct
  259 cexpo: SUM . idxset DO cproduct

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    idxset       go to state 301
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 150

  157 vval: IF . lexpr THEN vexpr ELSE vexpr END
  286 cval: IF . lexpr THEN cexpr ELSE cexpr END

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 302
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 151

  156 vval: VABS . '(' vexpr ')'

    '('  shift, and go to state 303


state 152

  155 vval: VARSYM . symidx

    '['  shift, and go to state 212

    $default  reduce using rule 241 (symidx)

    symidx  go to state 304


state 153

  150 vfactor: '+' . vfactor
  255 cfactor: '+' . cexpo

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 305
    '-'      shift, and go to state 306
    '('      shift, and go to state 155

    vfactor  go to state 307
    vexpo    go to state 159
    vval     go to state 160
    cexpo    go to state 219
    cval     go to state 109


state 154

  151 vfactor: '-' . vfactor
  256 cfactor: '-' . cexpo

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 305
    '-'      shift, and go to state 306
    '('      shift, and go to state 155

    vfactor  go to state 308
    vexpo    go to state 159
    vval     go to state 160
    cexpo    go to state 220
    cval     go to state 109


state 155

  158 vval: '(' . vexpr ')'
  282 cval: '(' . cexpr ')'

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 309
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 310
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 156

   69 decl_obj: DECLMIN NAME DO vexpr . ';'
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312
    ';'  shift, and go to state 313


state 157

  137 vexpr: vproduct .
  145 vproduct: vproduct . '*' cfactor
  146         | vproduct . '/' cfactor
  148         | vproduct . '*' vfactor

    '*'  shift, and go to state 314
    '/'  shift, and go to state 315

    $default  reduce using rule 137 (vexpr)


state 158

  144 vproduct: vfactor .

    $default  reduce using rule 144 (vproduct)


state 159

  149 vfactor: vexpo .

    $default  reduce using rule 149 (vfactor)


state 160

  152 vexpo: vval .
  153      | vval . POW cfactor

    POW  shift, and go to state 316

    $default  reduce using rule 152 (vexpo)


state 161

  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 317
    '-'  shift, and go to state 318


state 162

  147 vproduct: cproduct . '*' vfactor
  245 cexpr: cproduct .
  249 cproduct: cproduct . '*' cfactor
  250         | cproduct . '/' cfactor
  251         | cproduct . MOD cfactor
  252         | cproduct . DIV cfactor

    MOD  shift, and go to state 241
    DIV  shift, and go to state 242
    '*'  shift, and go to state 319
    '/'  shift, and go to state 244

    $default  reduce using rule 245 (cexpr)


state 163

   70 decl_obj: DECLMAX NAME DO vexpr . ';'
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312
    ';'  shift, and go to state 320


state 164

   74 constraint_list: FORALL . idxset DO constraint_list

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    idxset       go to state 321
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 165

   75 constraint_list: IF . lexpr THEN constraint_list END
   76                | IF . lexpr THEN constraint_list ELSE constraint_list END
  157 vval: IF . lexpr THEN vexpr ELSE vexpr END
  286 cval: IF . lexpr THEN cexpr ELSE cexpr END

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 322
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 166

   85 constraint: VIF . vbool THEN vexpr con_type vexpr ELSE vexpr con_type vexpr END con_attr_list
   86           | VIF . vbool THEN cexpr con_type vexpr ELSE vexpr con_type vexpr END con_attr_list
   87           | VIF . vbool THEN vexpr con_type cexpr ELSE vexpr con_type vexpr END con_attr_list
   88           | VIF . vbool THEN vexpr con_type vexpr ELSE cexpr con_type vexpr END con_attr_list
   89           | VIF . vbool THEN vexpr con_type vexpr ELSE vexpr con_type cexpr END con_attr_list
   90           | VIF . vbool THEN cexpr con_type cexpr ELSE vexpr con_type vexpr END con_attr_list
   91           | VIF . vbool THEN cexpr con_type vexpr ELSE cexpr con_type vexpr END con_attr_list
   92           | VIF . vbool THEN cexpr con_type vexpr ELSE vexpr con_type cexpr END con_attr_list
   93           | VIF . vbool THEN vexpr con_type cexpr ELSE cexpr con_type vexpr END con_attr_list
   94           | VIF . vbool THEN vexpr con_type cexpr ELSE vexpr con_type cexpr END con_attr_list
   95           | VIF . vbool THEN vexpr con_type vexpr ELSE cexpr con_type cexpr END con_attr_list
   96           | VIF . vbool THEN cexpr con_type cexpr ELSE cexpr con_type vexpr END con_attr_list
   97           | VIF . vbool THEN cexpr con_type cexpr ELSE vexpr con_type cexpr END con_attr_list
   98           | VIF . vbool THEN cexpr con_type vexpr ELSE cexpr con_type cexpr END con_attr_list
   99           | VIF . vbool THEN vexpr con_type cexpr ELSE cexpr con_type cexpr END con_attr_list
  100           | VIF . vbool THEN cexpr con_type cexpr ELSE cexpr con_type cexpr END con_attr_list
  101           | VIF . vbool THEN vexpr con_type vexpr END con_attr_list
  102           | VIF . vbool THEN cexpr con_type vexpr END con_attr_list
  103           | VIF . vbool THEN vexpr con_type cexpr END con_attr_list
  104           | VIF . vbool THEN cexpr con_type cexpr END con_attr_list

    NOT      shift, and go to state 323
    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 324

    vbool     go to state 325
    vexpr     go to state 326
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 327
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 167

   71 decl_sub: DECLSUB NAME DO constraint_list . ';'
   73 constraint_list: constraint_list . AND constraint

    AND  shift, and go to state 328
    ';'  shift, and go to state 329


state 168

   72 constraint_list: constraint .

    $default  reduce using rule 72 (constraint_list)


state 169

   77 constraint: vexpr . con_type vexpr con_attr_list
   78           | vexpr . con_type cexpr con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 330
    CMP_GE  shift, and go to state 331
    CMP_EQ  shift, and go to state 332
    '+'     shift, and go to state 311
    '-'     shift, and go to state 312

    con_type  go to state 333


state 170

   79 constraint: cexpr . con_type vexpr con_attr_list
   80           | cexpr . con_type cexpr con_attr_list
   81           | cexpr . con_type vexpr CMP_LE cexpr con_attr_list
   82           | cexpr . con_type cexpr CMP_LE cexpr con_attr_list
   83           | cexpr . con_type vexpr CMP_GE cexpr con_attr_list
   84           | cexpr . con_type cexpr CMP_GE cexpr con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 330
    CMP_GE  shift, and go to state 331
    CMP_EQ  shift, and go to state 332
    '+'     shift, and go to state 317
    '-'     shift, and go to state 318

    con_type  go to state 334


state 171

  161 soset: FORALL . idxset DO soset

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    idxset       go to state 335
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 172

  163 sos_type: TYPE1 .

    $default  reduce using rule 163 (sos_type)


state 173

  164 sos_type: TYPE2 .

    $default  reduce using rule 164 (sos_type)


state 174

  159 decl_sos: DECLSOS NAME DO soset . ';'

    ';'  shift, and go to state 336


state 175

  160 soset: sos_type . priority DO vexpr

    PRIORITY  shift, and go to state 141

    $default  reduce using rule 57 (priority)

    priority  go to state 337


state 176

   26 name_list: NAME .

    $default  reduce using rule 26 (name_list)


state 177

   22 def_numb: DEFNUMB DEFNAME '(' name_list . ')' ASGN cexpr ';'
   27 name_list: name_list . ',' NAME

    ','  shift, and go to state 338
    ')'  shift, and go to state 339


state 178

   23 def_strg: DEFSTRG DEFNAME '(' name_list . ')' ASGN cexpr ';'
   27 name_list: name_list . ',' NAME

    ','  shift, and go to state 338
    ')'  shift, and go to state 340


state 179

   24 def_bool: DEFBOOL DEFNAME '(' name_list . ')' ASGN lexpr ';'
   27 name_list: name_list . ',' NAME

    ','  shift, and go to state 338
    ')'  shift, and go to state 341


state 180

   25 def_set: DEFSET DEFNAME '(' name_list . ')' ASGN sexpr ';'
   27 name_list: name_list . ',' NAME

    ','  shift, and go to state 338
    ')'  shift, and go to state 342


state 181

  239 tuple: CMP_LT CMP_GT .

    $default  reduce using rule 239 (tuple)


state 182

  240 tuple: CMP_LT cexpr_list . CMP_GT
  244 cexpr_list: cexpr_list . ',' cexpr

    CMP_GT  shift, and go to state 343
    ','     shift, and go to state 238


state 183

  259 cexpo: SUM idxset . DO cproduct

    DO  shift, and go to state 344


state 184

  262 cexpo: MIN '(' . idxset ')'
  288 cval: MIN '(' . cexpr_list ')'

    CMP_LT    shift, and go to state 59
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 66
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 97
    '{'       shift, and go to state 98

    idxset       go to state 345
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124
    cexpr_list   go to state 346
    cexpr        go to state 105
    cproduct     go to state 106
    cfactor      go to state 107
    cexpo        go to state 108
    cval         go to state 109


state 185

  260 cexpo: MIN pure_idxset . DO cfactor

    DO  shift, and go to state 347


state 186

  263 cexpo: MAX '(' . idxset ')'
  289 cval: MAX '(' . cexpr_list ')'

    CMP_LT    shift, and go to state 59
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 66
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 97
    '{'       shift, and go to state 98

    idxset       go to state 348
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124
    cexpr_list   go to state 349
    cexpr        go to state 105
    cproduct     go to state 106
    cfactor      go to state 107
    cexpo        go to state 108
    cval         go to state 109


state 187

  261 cexpo: MAX pure_idxset . DO cfactor

    DO  shift, and go to state 350


state 188

  197 sval: ARGMIN '(' . cexpr ')' idxset DO cexpr
  200     | '(' . sexpr ')'

    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 66
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 97
    '{'       shift, and go to state 98

    sexpr     go to state 221
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    cexpr     go to state 351
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 189

  196 sval: ARGMIN idxset . DO cexpr

    DO  shift, and go to state 352


state 190

  199 sval: ARGMAX '(' . cexpr ')' idxset DO cexpr
  200     | '(' . sexpr ')'

    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 66
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 97
    '{'       shift, and go to state 98

    sexpr     go to state 221
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    cexpr     go to state 353
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 191

  198 sval: ARGMAX idxset . DO cexpr

    DO  shift, and go to state 354


state 192

  253 cproduct: PROD idxset . DO cfactor

    DO  shift, and go to state 355


state 193

  208 sval: IF lexpr . THEN sexpr ELSE sexpr END
  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr
  286 cval: IF lexpr . THEN cexpr ELSE cexpr END

    AND   shift, and go to state 260
    OR    shift, and go to state 261
    XOR   shift, and go to state 262
    THEN  shift, and go to state 356


state 194

  188 sproduct: INTER idxset . DO sval

    DO  shift, and go to state 357


state 195

  184 sunion: UNION idxset . DO sproduct

    DO  shift, and go to state 358


state 196

  206 sval: PROJ '(' . sexpr ',' tuple ')'

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 359
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 197

  272 cval: CARD '(' . sexpr ')'

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 360
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 198

  273 cval: ABS '(' . cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 361
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 199

  274 cval: SGN '(' . cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 362
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 200

  275 cval: ROUND '(' . cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 363
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 201

  276 cval: FLOOR '(' . cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 364
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 202

  277 cval: CEIL '(' . cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 365
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 203

  278 cval: LOG '(' . cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 366
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 204

  279 cval: LN '(' . cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 367
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 205

  280 cval: EXP '(' . cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 368
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 206

  281 cval: SQRT '(' . cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 369
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 207

  285 cval: RANDOM '(' . cexpr ',' cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 370
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 208

  287 cval: ORD '(' . sexpr ',' cexpr ',' cexpr ')'

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 371
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 209

  207 sval: INDEXSET '(' . SETSYM ')'

    SETSYM  shift, and go to state 372


state 210

  283 cval: LENGTH '(' . cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 373
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 211

  284 cval: SUBSTR '(' . cexpr ',' cexpr ',' cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 374
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 212

  242 symidx: '[' . cexpr_list ']'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr_list  go to state 375
    cexpr       go to state 105
    cproduct    go to state 106
    cfactor     go to state 107
    cexpo       go to state 108
    cval        go to state 109


state 213

  267 cval: NUMBSYM symidx .

    $default  reduce using rule 267 (cval)


state 214

  268 cval: STRGSYM symidx .

    $default  reduce using rule 268 (cval)


state 215

  189 sval: SETSYM symidx .

    $default  reduce using rule 189 (sval)


state 216

  269 cval: NUMBDEF '(' . cexpr_list ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr_list  go to state 376
    cexpr       go to state 105
    cproduct    go to state 106
    cfactor     go to state 107
    cexpo       go to state 108
    cval        go to state 109


state 217

  270 cval: STRGDEF '(' . cexpr_list ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr_list  go to state 377
    cexpr       go to state 105
    cproduct    go to state 106
    cfactor     go to state 107
    cexpo       go to state 108
    cval        go to state 109


state 218

  190 sval: SETDEF '(' . cexpr_list ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr_list  go to state 378
    cexpr       go to state 105
    cproduct    go to state 106
    cfactor     go to state 107
    cexpo       go to state 108
    cval        go to state 109


state 219

  255 cfactor: '+' cexpo .

    $default  reduce using rule 255 (cfactor)


state 220

  256 cfactor: '-' cexpo .

    $default  reduce using rule 256 (cfactor)


state 221

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  200 sval: '(' sexpr . ')'

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235
    ')'      shift, and go to state 379


state 222

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  282 cval: '(' cexpr . ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 380


state 223

  191 sval: '{' '}' .

    $default  reduce using rule 191 (sval)


state 224

  203 sval: '{' idxset . '}'
  204     | '{' idxset . DO cexpr '}'
  205     | '{' idxset . DO tuple '}'

    DO   shift, and go to state 381
    '}'  shift, and go to state 382


state 225

  210 read: read . read_par
  217 tuple_list: read .

    SKIP     shift, and go to state 283
    USE      shift, and go to state 284
    COMMENT  shift, and go to state 285
    MATCH    shift, and go to state 286

    $default  reduce using rule 217 (tuple_list)

    read_par  go to state 287


state 226

  201 sval: '{' tuple_list . '}'
  216 tuple_list: tuple_list . ',' tuple

    ','  shift, and go to state 383
    '}'  shift, and go to state 384


state 227

  174 pure_idxset: tuple . IN sexpr WITH lexpr
  175            | tuple . IN sexpr
  215 tuple_list: tuple .

    IN  shift, and go to state 272

    $default  reduce using rule 215 (tuple_list)


state 228

  202 sval: '{' cexpr_list . '}'
  244 cexpr_list: cexpr_list . ',' cexpr

    ','  shift, and go to state 238
    '}'  shift, and go to state 385


state 229

  192 sval: '{' cexpr . TO cexpr BY cexpr '}'
  193     | '{' cexpr . TO cexpr '}'
  194     | '{' cexpr . UNTIL cexpr BY cexpr '}'
  195     | '{' cexpr . UNTIL cexpr '}'
  243 cexpr_list: cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    TO     shift, and go to state 386
    UNTIL  shift, and go to state 387
    '+'    shift, and go to state 239
    '-'    shift, and go to state 240

    $default  reduce using rule 243 (cexpr_list)


state 230

  182 sexpr: sexpr INTER . sunion

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sunion    go to state 388
    sproduct  go to state 101
    sval      go to state 102


state 231

  177 sexpr: sexpr UNION . sunion

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sunion    go to state 389
    sproduct  go to state 101
    sval      go to state 102


state 232

  179 sexpr: sexpr SYMDIFF . sunion

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sunion    go to state 390
    sproduct  go to state 101
    sval      go to state 102


state 233

  181 sexpr: sexpr WITHOUT . sunion

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sunion    go to state 391
    sproduct  go to state 101
    sval      go to state 102


state 234

  178 sexpr: sexpr '+' . sunion

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sunion    go to state 392
    sproduct  go to state 101
    sval      go to state 102


state 235

  180 sexpr: sexpr '-' . sunion

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sunion    go to state 393
    sproduct  go to state 101
    sval      go to state 102


state 236

  186 sproduct: sproduct CROSS . sval

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sval  go to state 394


state 237

  187 sproduct: sproduct '*' . sval

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sval  go to state 395


state 238

  244 cexpr_list: cexpr_list ',' . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 396
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 239

  246 cexpr: cexpr '+' . cproduct

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cproduct  go to state 397
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 240

  247 cexpr: cexpr '-' . cproduct

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cproduct  go to state 398
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 241

  251 cproduct: cproduct MOD . cfactor

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cfactor  go to state 399
    cexpo    go to state 108
    cval     go to state 109


state 242

  252 cproduct: cproduct DIV . cfactor

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cfactor  go to state 400
    cexpo    go to state 108
    cval     go to state 109


state 243

  249 cproduct: cproduct '*' . cfactor

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cfactor  go to state 401
    cexpo    go to state 108
    cval     go to state 109


state 244

  250 cproduct: cproduct '/' . cfactor

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cfactor  go to state 402
    cexpo    go to state 108
    cval     go to state 109


state 245

  258 cexpo: cval POW . cfactor

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cfactor  go to state 403
    cexpo    go to state 108
    cval     go to state 109


state 246

  271 cval: cval FAC .

    $default  reduce using rule 271 (cval)


state 247

  236 lexpr: EXISTS '(' . idxset ')'

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    idxset       go to state 404
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 248

  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr
  233      | NOT lexpr .

    $default  reduce using rule 233 (lexpr)


state 249

  208 sval: IF lexpr . THEN sexpr ELSE sexpr END
  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr
  238      | IF lexpr . THEN lexpr ELSE lexpr END
  286 cval: IF lexpr . THEN cexpr ELSE cexpr END

    AND   shift, and go to state 260
    OR    shift, and go to state 261
    XOR   shift, and go to state 262
    THEN  shift, and go to state 405


state 250

  237 lexpr: BOOLDEF '(' . cexpr_list ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr_list  go to state 406
    cexpr       go to state 105
    cproduct    go to state 106
    cfactor     go to state 107
    cexpo       go to state 108
    cval        go to state 109


state 251

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  200 sval: '(' sexpr . ')'
  224 lexpr: sexpr . CMP_EQ sexpr
  225      | sexpr . CMP_NE sexpr
  226      | sexpr . CMP_GT sexpr
  227      | sexpr . CMP_GE sexpr
  228      | sexpr . CMP_LT sexpr
  229      | sexpr . CMP_LE sexpr

    CMP_LE   shift, and go to state 254
    CMP_GE   shift, and go to state 255
    CMP_EQ   shift, and go to state 256
    CMP_LT   shift, and go to state 257
    CMP_GT   shift, and go to state 258
    CMP_NE   shift, and go to state 259
    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235
    ')'      shift, and go to state 379


state 252

  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr
  234      | '(' lexpr . ')'

    AND  shift, and go to state 260
    OR   shift, and go to state 261
    XOR  shift, and go to state 262
    ')'  shift, and go to state 407


state 253

  218 lexpr: cexpr . CMP_EQ cexpr
  219      | cexpr . CMP_NE cexpr
  220      | cexpr . CMP_GT cexpr
  221      | cexpr . CMP_GE cexpr
  222      | cexpr . CMP_LT cexpr
  223      | cexpr . CMP_LE cexpr
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  282 cval: '(' cexpr . ')'

    CMP_LE  shift, and go to state 264
    CMP_GE  shift, and go to state 265
    CMP_EQ  shift, and go to state 266
    CMP_LT  shift, and go to state 267
    CMP_GT  shift, and go to state 268
    CMP_NE  shift, and go to state 269
    '+'     shift, and go to state 239
    '-'     shift, and go to state 240
    ')'     shift, and go to state 380


state 254

  229 lexpr: sexpr CMP_LE . sexpr

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 408
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 255

  227 lexpr: sexpr CMP_GE . sexpr

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 409
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 256

  224 lexpr: sexpr CMP_EQ . sexpr

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 410
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 257

  228 lexpr: sexpr CMP_LT . sexpr

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 411
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 258

  226 lexpr: sexpr CMP_GT . sexpr

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 412
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 259

  225 lexpr: sexpr CMP_NE . sexpr

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 413
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 260

  230 lexpr: lexpr AND . lexpr

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 414
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 261

  231 lexpr: lexpr OR . lexpr

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 415
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 262

  232 lexpr: lexpr XOR . lexpr

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 416
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 263

  235 lexpr: tuple IN . sexpr

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 417
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 264

  223 lexpr: cexpr CMP_LE . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 418
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 265

  221 lexpr: cexpr CMP_GE . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 419
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 266

  218 lexpr: cexpr CMP_EQ . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 420
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 267

  222 lexpr: cexpr CMP_LT . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 421
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 268

  220 lexpr: cexpr CMP_GT . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 422
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 269

  219 lexpr: cexpr CMP_NE . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 423
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 270

  208 sval: IF lexpr . THEN sexpr ELSE sexpr END
  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr

    AND   shift, and go to state 260
    OR    shift, and go to state 261
    XOR   shift, and go to state 262
    THEN  shift, and go to state 424


state 271

  171 command: FORALL idxset DO . command

    PRINT   shift, and go to state 36
    CHECK   shift, and go to state 37
    FORALL  shift, and go to state 38

    command  go to state 425


state 272

  174 pure_idxset: tuple IN . sexpr WITH lexpr
  175            | tuple IN . sexpr

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 426
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 273

   12 decl_set: DECLSET NAME ASGN sexpr ';' .

    $default  reduce using rule 12 (decl_set)


state 274

   15 decl_set: DECLSET NAME '[' ']' ASGN . set_entry_list ';'

    CMP_LT    shift, and go to state 59
    SUBSETS   shift, and go to state 427
    POWERSET  shift, and go to state 428

    set_entry_list  go to state 429
    set_entry       go to state 430
    tuple           go to state 431


state 275

   13 decl_set: DECLSET NAME '[' idxset ']' . ASGN sexpr ';'
   14         | DECLSET NAME '[' idxset ']' . ASGN set_entry_list ';'

    ASGN  shift, and go to state 432


state 276

   66 matrix_head: WITH cexpr_list . WITH
  244 cexpr_list: cexpr_list . ',' cexpr

    WITH  shift, and go to state 433
    ','   shift, and go to state 238


state 277

  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr
  286 cval: IF lexpr . THEN cexpr ELSE cexpr END

    AND   shift, and go to state 260
    OR    shift, and go to state 261
    XOR   shift, and go to state 262
    THEN  shift, and go to state 434


state 278

  209 read: READ cexpr . AS cexpr
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    AS   shift, and go to state 435
    '+'  shift, and go to state 239
    '-'  shift, and go to state 240


state 279

   30 decl_par: DECLPAR NAME ASGN par_singleton ';' .

    $default  reduce using rule 30 (decl_par)


state 280

   62 cexpr_entry_list: cexpr_entry_list ',' . cexpr_entry

    CMP_LT  shift, and go to state 59

    cexpr_entry  go to state 436
    tuple        go to state 138


state 281

   67 matrix_body: matrix_head . cexpr_list WITH

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr_list  go to state 437
    cexpr       go to state 105
    cproduct    go to state 106
    cfactor     go to state 107
    cexpo       go to state 108
    cval        go to state 109


state 282

   64 cexpr_entry_list: matrix_head matrix_body .
   68 matrix_body: matrix_body . matrix_head cexpr_list WITH

    WITH  shift, and go to state 129

    $default  reduce using rule 64 (cexpr_entry_list)

    matrix_head  go to state 438


state 283

  211 read_par: SKIP . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 439
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 284

  212 read_par: USE . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 440
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 285

  213 read_par: COMMENT . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 441
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 286

  214 read_par: MATCH . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 442
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 287

  210 read: read read_par .

    $default  reduce using rule 210 (read)


state 288

   65 cexpr_entry: tuple cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 65 (cexpr_entry)


state 289

   28 decl_par: DECLPAR NAME '[' idxset ']' . ASGN cexpr_entry_list par_default ';'
   29         | DECLPAR NAME '[' idxset ']' . ASGN cexpr ';'

    ASGN  shift, and go to state 443


state 290

   58 priority: PRIORITY cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 58 (priority)


state 291

   60 startval: STARTVAL . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 444
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 292

   41 decl_var: DECLVAR NAME BINARY priority startval . ';'

    ';'  shift, and go to state 445


state 293

   50 lower: CMP_GE IF . lexpr THEN cexpr ELSE '-' INFTY END
   51      | CMP_GE IF . lexpr THEN '-' INFTY ELSE cexpr END
  286 cval: IF . lexpr THEN cexpr ELSE cexpr END

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 446
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 294

   49 lower: CMP_GE '-' . INFTY
  256 cfactor: '-' . cexpo

    INFTY    shift, and go to state 447
    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '('      shift, and go to state 132

    cexpo  go to state 220
    cval   go to state 109


state 295

   48 lower: CMP_GE cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 48 (lower)


state 296

   53 upper: CMP_LE . cexpr
   54      | CMP_LE . INFTY
   55      | CMP_LE . IF lexpr THEN cexpr ELSE INFTY END
   56      | CMP_LE . IF lexpr THEN INFTY ELSE cexpr END

    INFTY    shift, and go to state 448
    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 449
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 450
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 297

   43 decl_var: DECLVAR NAME INTEGER lower upper . priority startval ';'

    PRIORITY  shift, and go to state 141

    $default  reduce using rule 57 (priority)

    priority  go to state 451


state 298

   39 decl_var: DECLVAR NAME IMPLICIT BINARY ';' .

    $default  reduce using rule 39 (decl_var)


state 299

   36 decl_var: DECLVAR NAME '[' idxset ']' . var_type lower upper ';'
   38         | DECLVAR NAME '[' idxset ']' . IMPLICIT BINARY ';'
   40         | DECLVAR NAME '[' idxset ']' . BINARY priority startval ';'
   42         | DECLVAR NAME '[' idxset ']' . INTEGER lower upper priority startval ';'

    BINARY    shift, and go to state 452
    INTEGER   shift, and go to state 453
    REAL      shift, and go to state 47
    IMPLICIT  shift, and go to state 454

    $default  reduce using rule 44 (var_type)

    var_type  go to state 455


state 300

   37 decl_var: DECLVAR NAME var_type lower upper . ';'

    ';'  shift, and go to state 456


state 301

  154 vexpo: SUM idxset . DO vproduct
  259 cexpo: SUM idxset . DO cproduct

    DO  shift, and go to state 457


state 302

  157 vval: IF lexpr . THEN vexpr ELSE vexpr END
  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr
  286 cval: IF lexpr . THEN cexpr ELSE cexpr END

    AND   shift, and go to state 260
    OR    shift, and go to state 261
    XOR   shift, and go to state 262
    THEN  shift, and go to state 458


state 303

  156 vval: VABS '(' . vexpr ')'

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 459
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 161
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 304

  155 vval: VARSYM symidx .

    $default  reduce using rule 155 (vval)


state 305

  150 vfactor: '+' . vfactor

    SUM     shift, and go to state 460
    IF      shift, and go to state 461
    VABS    shift, and go to state 151
    VARSYM  shift, and go to state 152
    '+'     shift, and go to state 305
    '-'     shift, and go to state 306
    '('     shift, and go to state 462

    vfactor  go to state 307
    vexpo    go to state 159
    vval     go to state 160


state 306

  151 vfactor: '-' . vfactor

    SUM     shift, and go to state 460
    IF      shift, and go to state 461
    VABS    shift, and go to state 151
    VARSYM  shift, and go to state 152
    '+'     shift, and go to state 305
    '-'     shift, and go to state 306
    '('     shift, and go to state 462

    vfactor  go to state 308
    vexpo    go to state 159
    vval     go to state 160


state 307

  150 vfactor: '+' vfactor .

    $default  reduce using rule 150 (vfactor)


state 308

  151 vfactor: '-' vfactor .

    $default  reduce using rule 151 (vfactor)


state 309

  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct
  158 vval: '(' vexpr . ')'

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312
    ')'  shift, and go to state 463


state 310

  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  282 cval: '(' cexpr . ')'

    '+'  shift, and go to state 317
    '-'  shift, and go to state 318
    ')'  shift, and go to state 380


state 311

  138 vexpr: vexpr '+' . vproduct
  140      | vexpr '+' . cproduct

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vproduct  go to state 464
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cproduct  go to state 465
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 312

  139 vexpr: vexpr '-' . vproduct
  141      | vexpr '-' . cproduct

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vproduct  go to state 466
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cproduct  go to state 467
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 313

   69 decl_obj: DECLMIN NAME DO vexpr ';' .

    $default  reduce using rule 69 (decl_obj)


state 314

  145 vproduct: vproduct '*' . cfactor
  148         | vproduct '*' . vfactor

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vfactor  go to state 468
    vexpo    go to state 159
    vval     go to state 160
    cfactor  go to state 469
    cexpo    go to state 108
    cval     go to state 109


state 315

  146 vproduct: vproduct '/' . cfactor

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cfactor  go to state 470
    cexpo    go to state 108
    cval     go to state 109


state 316

  153 vexpo: vval POW . cfactor

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cfactor  go to state 471
    cexpo    go to state 108
    cval     go to state 109


state 317

  142 vexpr: cexpr '+' . vproduct
  246 cexpr: cexpr '+' . cproduct

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vproduct  go to state 472
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cproduct  go to state 473
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 318

  143 vexpr: cexpr '-' . vproduct
  247 cexpr: cexpr '-' . cproduct

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vproduct  go to state 474
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cproduct  go to state 475
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 319

  147 vproduct: cproduct '*' . vfactor
  249 cproduct: cproduct '*' . cfactor

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vfactor  go to state 476
    vexpo    go to state 159
    vval     go to state 160
    cfactor  go to state 401
    cexpo    go to state 108
    cval     go to state 109


state 320

   70 decl_obj: DECLMAX NAME DO vexpr ';' .

    $default  reduce using rule 70 (decl_obj)


state 321

   74 constraint_list: FORALL idxset . DO constraint_list

    DO  shift, and go to state 477


state 322

   75 constraint_list: IF lexpr . THEN constraint_list END
   76                | IF lexpr . THEN constraint_list ELSE constraint_list END
  157 vval: IF lexpr . THEN vexpr ELSE vexpr END
  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr
  286 cval: IF lexpr . THEN cexpr ELSE cexpr END

    AND   shift, and go to state 260
    OR    shift, and go to state 261
    XOR   shift, and go to state 262
    THEN  shift, and go to state 478


state 323

  126 vbool: NOT . vbool

    NOT      shift, and go to state 323
    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 324

    vbool     go to state 479
    vexpr     go to state 326
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 327
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 324

  127 vbool: '(' . vbool ')'
  158 vval: '(' . vexpr ')'
  282 cval: '(' . cexpr ')'

    NOT      shift, and go to state 323
    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 324

    vbool     go to state 480
    vexpr     go to state 481
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 482
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 325

   85 constraint: VIF vbool . THEN vexpr con_type vexpr ELSE vexpr con_type vexpr END con_attr_list
   86           | VIF vbool . THEN cexpr con_type vexpr ELSE vexpr con_type vexpr END con_attr_list
   87           | VIF vbool . THEN vexpr con_type cexpr ELSE vexpr con_type vexpr END con_attr_list
   88           | VIF vbool . THEN vexpr con_type vexpr ELSE cexpr con_type vexpr END con_attr_list
   89           | VIF vbool . THEN vexpr con_type vexpr ELSE vexpr con_type cexpr END con_attr_list
   90           | VIF vbool . THEN cexpr con_type cexpr ELSE vexpr con_type vexpr END con_attr_list
   91           | VIF vbool . THEN cexpr con_type vexpr ELSE cexpr con_type vexpr END con_attr_list
   92           | VIF vbool . THEN cexpr con_type vexpr ELSE vexpr con_type cexpr END con_attr_list
   93           | VIF vbool . THEN vexpr con_type cexpr ELSE cexpr con_type vexpr END con_attr_list
   94           | VIF vbool . THEN vexpr con_type cexpr ELSE vexpr con_type cexpr END con_attr_list
   95           | VIF vbool . THEN vexpr con_type vexpr ELSE cexpr con_type cexpr END con_attr_list
   96           | VIF vbool . THEN cexpr con_type cexpr ELSE cexpr con_type vexpr END con_attr_list
   97           | VIF vbool . THEN cexpr con_type cexpr ELSE vexpr con_type cexpr END con_attr_list
   98           | VIF vbool . THEN cexpr con_type vexpr ELSE cexpr con_type cexpr END con_attr_list
   99           | VIF vbool . THEN vexpr con_type cexpr ELSE cexpr con_type cexpr END con_attr_list
  100           | VIF vbool . THEN cexpr con_type cexpr ELSE cexpr con_type cexpr END con_attr_list
  101           | VIF vbool . THEN vexpr con_type vexpr END con_attr_list
  102           | VIF vbool . THEN cexpr con_type vexpr END con_attr_list
  103           | VIF vbool . THEN vexpr con_type cexpr END con_attr_list
  104           | VIF vbool . THEN cexpr con_type cexpr END con_attr_list
  123 vbool: vbool . AND vbool
  124      | vbool . OR vbool
  125      | vbool . XOR vbool

    AND   shift, and go to state 483
    OR    shift, and go to state 484
    XOR   shift, and go to state 485
    THEN  shift, and go to state 486


state 326

  105 vbool: vexpr . CMP_NE vexpr
  107      | vexpr . CMP_NE cexpr
  108      | vexpr . CMP_EQ vexpr
  110      | vexpr . CMP_EQ cexpr
  111      | vexpr . CMP_LE vexpr
  113      | vexpr . CMP_LE cexpr
  114      | vexpr . CMP_GE vexpr
  116      | vexpr . CMP_GE cexpr
  117      | vexpr . CMP_LT vexpr
  119      | vexpr . CMP_LT cexpr
  120      | vexpr . CMP_GT vexpr
  122      | vexpr . CMP_GT cexpr
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 487
    CMP_GE  shift, and go to state 488
    CMP_EQ  shift, and go to state 489
    CMP_LT  shift, and go to state 490
    CMP_GT  shift, and go to state 491
    CMP_NE  shift, and go to state 492
    '+'     shift, and go to state 311
    '-'     shift, and go to state 312


state 327

  106 vbool: cexpr . CMP_NE vexpr
  109      | cexpr . CMP_EQ vexpr
  112      | cexpr . CMP_LE vexpr
  115      | cexpr . CMP_GE vexpr
  118      | cexpr . CMP_LT vexpr
  121      | cexpr . CMP_GT vexpr
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 493
    CMP_GE  shift, and go to state 494
    CMP_EQ  shift, and go to state 495
    CMP_LT  shift, and go to state 496
    CMP_GT  shift, and go to state 497
    CMP_NE  shift, and go to state 498
    '+'     shift, and go to state 317
    '-'     shift, and go to state 318


state 328

   73 constraint_list: constraint_list AND . constraint

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VIF      shift, and go to state 166
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    constraint  go to state 499
    vexpr       go to state 169
    vproduct    go to state 157
    vfactor     go to state 158
    vexpo       go to state 159
    vval        go to state 160
    cexpr       go to state 170
    cproduct    go to state 162
    cfactor     go to state 107
    cexpo       go to state 108
    cval        go to state 109


state 329

   71 decl_sub: DECLSUB NAME DO constraint_list ';' .

    $default  reduce using rule 71 (decl_sub)


state 330

  134 con_type: CMP_LE .

    $default  reduce using rule 134 (con_type)


state 331

  135 con_type: CMP_GE .

    $default  reduce using rule 135 (con_type)


state 332

  136 con_type: CMP_EQ .

    $default  reduce using rule 136 (con_type)


state 333

   77 constraint: vexpr con_type . vexpr con_attr_list
   78           | vexpr con_type . cexpr con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 500
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 501
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 334

   79 constraint: cexpr con_type . vexpr con_attr_list
   80           | cexpr con_type . cexpr con_attr_list
   81           | cexpr con_type . vexpr CMP_LE cexpr con_attr_list
   82           | cexpr con_type . cexpr CMP_LE cexpr con_attr_list
   83           | cexpr con_type . vexpr CMP_GE cexpr con_attr_list
   84           | cexpr con_type . cexpr CMP_GE cexpr con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 502
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 503
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 335

  161 soset: FORALL idxset . DO soset

    DO  shift, and go to state 504


state 336

  159 decl_sos: DECLSOS NAME DO soset ';' .

    $default  reduce using rule 159 (decl_sos)


state 337

  160 soset: sos_type priority . DO vexpr

    DO  shift, and go to state 505


state 338

   27 name_list: name_list ',' . NAME

    NAME  shift, and go to state 506


state 339

   22 def_numb: DEFNUMB DEFNAME '(' name_list ')' . ASGN cexpr ';'

    ASGN  shift, and go to state 507


state 340

   23 def_strg: DEFSTRG DEFNAME '(' name_list ')' . ASGN cexpr ';'

    ASGN  shift, and go to state 508


state 341

   24 def_bool: DEFBOOL DEFNAME '(' name_list ')' . ASGN lexpr ';'

    ASGN  shift, and go to state 509


state 342

   25 def_set: DEFSET DEFNAME '(' name_list ')' . ASGN sexpr ';'

    ASGN  shift, and go to state 510


state 343

  240 tuple: CMP_LT cexpr_list CMP_GT .

    $default  reduce using rule 240 (tuple)


state 344

  259 cexpo: SUM idxset DO . cproduct

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cproduct  go to state 511
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 345

  262 cexpo: MIN '(' idxset . ')'

    ')'  shift, and go to state 512


state 346

  244 cexpr_list: cexpr_list . ',' cexpr
  288 cval: MIN '(' cexpr_list . ')'

    ','  shift, and go to state 238
    ')'  shift, and go to state 513


state 347

  260 cexpo: MIN pure_idxset DO . cfactor

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cfactor  go to state 514
    cexpo    go to state 108
    cval     go to state 109


state 348

  263 cexpo: MAX '(' idxset . ')'

    ')'  shift, and go to state 515


state 349

  244 cexpr_list: cexpr_list . ',' cexpr
  289 cval: MAX '(' cexpr_list . ')'

    ','  shift, and go to state 238
    ')'  shift, and go to state 516


state 350

  261 cexpo: MAX pure_idxset DO . cfactor

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cfactor  go to state 517
    cexpo    go to state 108
    cval     go to state 109


state 351

  197 sval: ARGMIN '(' cexpr . ')' idxset DO cexpr
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 518


state 352

  196 sval: ARGMIN idxset DO . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 519
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 353

  199 sval: ARGMAX '(' cexpr . ')' idxset DO cexpr
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 520


state 354

  198 sval: ARGMAX idxset DO . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 521
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 355

  253 cproduct: PROD idxset DO . cfactor

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cfactor  go to state 522
    cexpo    go to state 108
    cval     go to state 109


state 356

  208 sval: IF lexpr THEN . sexpr ELSE sexpr END
  286 cval: IF lexpr THEN . cexpr ELSE cexpr END

    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 66
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 97
    '{'       shift, and go to state 98

    sexpr     go to state 523
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    cexpr     go to state 524
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 357

  188 sproduct: INTER idxset DO . sval

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sval  go to state 525


state 358

  184 sunion: UNION idxset DO . sproduct

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sproduct  go to state 526
    sval      go to state 102


state 359

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  206 sval: PROJ '(' sexpr . ',' tuple ')'

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235
    ','      shift, and go to state 527


state 360

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  272 cval: CARD '(' sexpr . ')'

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235
    ')'      shift, and go to state 528


state 361

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  273 cval: ABS '(' cexpr . ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 529


state 362

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  274 cval: SGN '(' cexpr . ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 530


state 363

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  275 cval: ROUND '(' cexpr . ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 531


state 364

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  276 cval: FLOOR '(' cexpr . ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 532


state 365

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  277 cval: CEIL '(' cexpr . ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 533


state 366

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  278 cval: LOG '(' cexpr . ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 534


state 367

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  279 cval: LN '(' cexpr . ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 535


state 368

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  280 cval: EXP '(' cexpr . ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 536


state 369

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  281 cval: SQRT '(' cexpr . ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 537


state 370

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  285 cval: RANDOM '(' cexpr . ',' cexpr ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ','  shift, and go to state 538


state 371

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  287 cval: ORD '(' sexpr . ',' cexpr ',' cexpr ')'

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235
    ','      shift, and go to state 539


state 372

  207 sval: INDEXSET '(' SETSYM . ')'

    ')'  shift, and go to state 540


state 373

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  283 cval: LENGTH '(' cexpr . ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 541


state 374

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  284 cval: SUBSTR '(' cexpr . ',' cexpr ',' cexpr ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ','  shift, and go to state 542


state 375

  242 symidx: '[' cexpr_list . ']'
  244 cexpr_list: cexpr_list . ',' cexpr

    ']'  shift, and go to state 543
    ','  shift, and go to state 238


state 376

  244 cexpr_list: cexpr_list . ',' cexpr
  269 cval: NUMBDEF '(' cexpr_list . ')'

    ','  shift, and go to state 238
    ')'  shift, and go to state 544


state 377

  244 cexpr_list: cexpr_list . ',' cexpr
  270 cval: STRGDEF '(' cexpr_list . ')'

    ','  shift, and go to state 238
    ')'  shift, and go to state 545


state 378

  190 sval: SETDEF '(' cexpr_list . ')'
  244 cexpr_list: cexpr_list . ',' cexpr

    ','  shift, and go to state 238
    ')'  shift, and go to state 546


state 379

  200 sval: '(' sexpr ')' .

    $default  reduce using rule 200 (sval)


state 380

  282 cval: '(' cexpr ')' .

    $default  reduce using rule 282 (cval)


state 381

  204 sval: '{' idxset DO . cexpr '}'
  205     | '{' idxset DO . tuple '}'

    CMP_LT   shift, and go to state 59
    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    tuple     go to state 547
    cexpr     go to state 548
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 382

  203 sval: '{' idxset '}' .

    $default  reduce using rule 203 (sval)


state 383

  216 tuple_list: tuple_list ',' . tuple

    CMP_LT  shift, and go to state 59

    tuple  go to state 549


state 384

  201 sval: '{' tuple_list '}' .

    $default  reduce using rule 201 (sval)


state 385

  202 sval: '{' cexpr_list '}' .

    $default  reduce using rule 202 (sval)


state 386

  192 sval: '{' cexpr TO . cexpr BY cexpr '}'
  193     | '{' cexpr TO . cexpr '}'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 550
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 387

  194 sval: '{' cexpr UNTIL . cexpr BY cexpr '}'
  195     | '{' cexpr UNTIL . cexpr '}'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 551
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 388

  182 sexpr: sexpr INTER sunion .

    $default  reduce using rule 182 (sexpr)


state 389

  177 sexpr: sexpr UNION sunion .

    $default  reduce using rule 177 (sexpr)


state 390

  179 sexpr: sexpr SYMDIFF sunion .

    $default  reduce using rule 179 (sexpr)


state 391

  181 sexpr: sexpr WITHOUT sunion .

    $default  reduce using rule 181 (sexpr)


state 392

  178 sexpr: sexpr '+' sunion .

    $default  reduce using rule 178 (sexpr)


state 393

  180 sexpr: sexpr '-' sunion .

    $default  reduce using rule 180 (sexpr)


state 394

  186 sproduct: sproduct CROSS sval .

    $default  reduce using rule 186 (sproduct)


state 395

  187 sproduct: sproduct '*' sval .

    $default  reduce using rule 187 (sproduct)


state 396

  244 cexpr_list: cexpr_list ',' cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 244 (cexpr_list)


state 397

  246 cexpr: cexpr '+' cproduct .
  249 cproduct: cproduct . '*' cfactor
  250         | cproduct . '/' cfactor
  251         | cproduct . MOD cfactor
  252         | cproduct . DIV cfactor

    MOD  shift, and go to state 241
    DIV  shift, and go to state 242
    '*'  shift, and go to state 243
    '/'  shift, and go to state 244

    $default  reduce using rule 246 (cexpr)


state 398

  247 cexpr: cexpr '-' cproduct .
  249 cproduct: cproduct . '*' cfactor
  250         | cproduct . '/' cfactor
  251         | cproduct . MOD cfactor
  252         | cproduct . DIV cfactor

    MOD  shift, and go to state 241
    DIV  shift, and go to state 242
    '*'  shift, and go to state 243
    '/'  shift, and go to state 244

    $default  reduce using rule 247 (cexpr)


state 399

  251 cproduct: cproduct MOD cfactor .

    $default  reduce using rule 251 (cproduct)


state 400

  252 cproduct: cproduct DIV cfactor .

    $default  reduce using rule 252 (cproduct)


state 401

  249 cproduct: cproduct '*' cfactor .

    $default  reduce using rule 249 (cproduct)


state 402

  250 cproduct: cproduct '/' cfactor .

    $default  reduce using rule 250 (cproduct)


state 403

  258 cexpo: cval POW cfactor .

    $default  reduce using rule 258 (cexpo)


state 404

  236 lexpr: EXISTS '(' idxset . ')'

    ')'  shift, and go to state 552


state 405

  208 sval: IF lexpr THEN . sexpr ELSE sexpr END
  238 lexpr: IF lexpr THEN . lexpr ELSE lexpr END
  286 cval: IF lexpr THEN . cexpr ELSE cexpr END

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 553
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 554
    tuple     go to state 117
    cexpr     go to state 555
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 406

  237 lexpr: BOOLDEF '(' cexpr_list . ')'
  244 cexpr_list: cexpr_list . ',' cexpr

    ','  shift, and go to state 238
    ')'  shift, and go to state 556


state 407

  234 lexpr: '(' lexpr ')' .

    $default  reduce using rule 234 (lexpr)


state 408

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  229 lexpr: sexpr CMP_LE sexpr .

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235

    $default  reduce using rule 229 (lexpr)


state 409

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  227 lexpr: sexpr CMP_GE sexpr .

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235

    $default  reduce using rule 227 (lexpr)


state 410

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  224 lexpr: sexpr CMP_EQ sexpr .

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235

    $default  reduce using rule 224 (lexpr)


state 411

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  228 lexpr: sexpr CMP_LT sexpr .

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235

    $default  reduce using rule 228 (lexpr)


state 412

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  226 lexpr: sexpr CMP_GT sexpr .

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235

    $default  reduce using rule 226 (lexpr)


state 413

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  225 lexpr: sexpr CMP_NE sexpr .

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235

    $default  reduce using rule 225 (lexpr)


state 414

  230 lexpr: lexpr . AND lexpr
  230      | lexpr AND lexpr .
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr

    $default  reduce using rule 230 (lexpr)


state 415

  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  231      | lexpr OR lexpr .
  232      | lexpr . XOR lexpr

    AND  shift, and go to state 260

    $default  reduce using rule 231 (lexpr)


state 416

  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr
  232      | lexpr XOR lexpr .

    AND  shift, and go to state 260

    $default  reduce using rule 232 (lexpr)


state 417

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  235 lexpr: tuple IN sexpr .

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235

    $default  reduce using rule 235 (lexpr)


state 418

  223 lexpr: cexpr CMP_LE cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 223 (lexpr)


state 419

  221 lexpr: cexpr CMP_GE cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 221 (lexpr)


state 420

  218 lexpr: cexpr CMP_EQ cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 218 (lexpr)


state 421

  222 lexpr: cexpr CMP_LT cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 222 (lexpr)


state 422

  220 lexpr: cexpr CMP_GT cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 220 (lexpr)


state 423

  219 lexpr: cexpr CMP_NE cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 219 (lexpr)


state 424

  208 sval: IF lexpr THEN . sexpr ELSE sexpr END

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 523
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 425

  171 command: FORALL idxset DO command .

    $default  reduce using rule 171 (command)


state 426

  174 pure_idxset: tuple IN sexpr . WITH lexpr
  175            | tuple IN sexpr .
  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion

    WITH     shift, and go to state 557
    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235

    $default  reduce using rule 175 (pure_idxset)


state 427

   18 set_entry_list: SUBSETS . '(' sexpr ',' cexpr ')'
   19               | SUBSETS . '(' sexpr ',' cexpr ',' cexpr ')'

    '('  shift, and go to state 558


state 428

   20 set_entry_list: POWERSET . '(' sexpr ')'

    '('  shift, and go to state 559


state 429

   15 decl_set: DECLSET NAME '[' ']' ASGN set_entry_list . ';'
   17 set_entry_list: set_entry_list . ',' set_entry

    ';'  shift, and go to state 560
    ','  shift, and go to state 561


state 430

   16 set_entry_list: set_entry .

    $default  reduce using rule 16 (set_entry_list)


state 431

   21 set_entry: tuple . sexpr

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 562
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 432

   13 decl_set: DECLSET NAME '[' idxset ']' ASGN . sexpr ';'
   14         | DECLSET NAME '[' idxset ']' ASGN . set_entry_list ';'

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    SUBSETS   shift, and go to state 427
    INDEXSET  shift, and go to state 82
    POWERSET  shift, and go to state 428
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    set_entry_list  go to state 563
    set_entry       go to state 430
    sexpr           go to state 564
    sunion          go to state 100
    sproduct        go to state 101
    sval            go to state 102
    tuple           go to state 431


state 433

   66 matrix_head: WITH cexpr_list WITH .

    $default  reduce using rule 66 (matrix_head)


state 434

  286 cval: IF lexpr THEN . cexpr ELSE cexpr END

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 524
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 435

  209 read: READ cexpr AS . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 565
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 436

   62 cexpr_entry_list: cexpr_entry_list ',' cexpr_entry .

    $default  reduce using rule 62 (cexpr_entry_list)


state 437

   67 matrix_body: matrix_head cexpr_list . WITH
  244 cexpr_list: cexpr_list . ',' cexpr

    WITH  shift, and go to state 566
    ','   shift, and go to state 238


state 438

   68 matrix_body: matrix_body matrix_head . cexpr_list WITH

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr_list  go to state 567
    cexpr       go to state 105
    cproduct    go to state 106
    cfactor     go to state 107
    cexpo       go to state 108
    cval        go to state 109


state 439

  211 read_par: SKIP cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 211 (read_par)


state 440

  212 read_par: USE cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 212 (read_par)


state 441

  213 read_par: COMMENT cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 213 (read_par)


state 442

  214 read_par: MATCH cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 214 (read_par)


state 443

   28 decl_par: DECLPAR NAME '[' idxset ']' ASGN . cexpr_entry_list par_default ';'
   29         | DECLPAR NAME '[' idxset ']' ASGN . cexpr ';'

    WITH     shift, and go to state 129
    CMP_LT   shift, and go to state 59
    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    READ     shift, and go to state 131
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr_entry_list  go to state 568
    cexpr_entry       go to state 135
    matrix_head       go to state 136
    read              go to state 137
    tuple             go to state 138
    cexpr             go to state 569
    cproduct          go to state 106
    cfactor           go to state 107
    cexpo             go to state 108
    cval              go to state 109


state 444

   60 startval: STARTVAL cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 60 (startval)


state 445

   41 decl_var: DECLVAR NAME BINARY priority startval ';' .

    $default  reduce using rule 41 (decl_var)


state 446

   50 lower: CMP_GE IF lexpr . THEN cexpr ELSE '-' INFTY END
   51      | CMP_GE IF lexpr . THEN '-' INFTY ELSE cexpr END
  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr
  286 cval: IF lexpr . THEN cexpr ELSE cexpr END

    AND   shift, and go to state 260
    OR    shift, and go to state 261
    XOR   shift, and go to state 262
    THEN  shift, and go to state 570


state 447

   49 lower: CMP_GE '-' INFTY .

    $default  reduce using rule 49 (lower)


state 448

   54 upper: CMP_LE INFTY .

    $default  reduce using rule 54 (upper)


state 449

   55 upper: CMP_LE IF . lexpr THEN cexpr ELSE INFTY END
   56      | CMP_LE IF . lexpr THEN INFTY ELSE cexpr END
  286 cval: IF . lexpr THEN cexpr ELSE cexpr END

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 571
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 450

   53 upper: CMP_LE cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 53 (upper)


state 451

   43 decl_var: DECLVAR NAME INTEGER lower upper priority . startval ';'

    STARTVAL  shift, and go to state 291

    $default  reduce using rule 59 (startval)

    startval  go to state 572


state 452

   40 decl_var: DECLVAR NAME '[' idxset ']' BINARY . priority startval ';'

    PRIORITY  shift, and go to state 141

    $default  reduce using rule 57 (priority)

    priority  go to state 573


state 453

   42 decl_var: DECLVAR NAME '[' idxset ']' INTEGER . lower upper priority startval ';'

    CMP_GE  shift, and go to state 143

    $default  reduce using rule 47 (lower)

    lower  go to state 574


state 454

   38 decl_var: DECLVAR NAME '[' idxset ']' IMPLICIT . BINARY ';'
   46 var_type: IMPLICIT . INTEGER

    BINARY   shift, and go to state 575
    INTEGER  shift, and go to state 146


state 455

   36 decl_var: DECLVAR NAME '[' idxset ']' var_type . lower upper ';'

    CMP_GE  shift, and go to state 143

    $default  reduce using rule 47 (lower)

    lower  go to state 576


state 456

   37 decl_var: DECLVAR NAME var_type lower upper ';' .

    $default  reduce using rule 37 (decl_var)


state 457

  154 vexpo: SUM idxset DO . vproduct
  259 cexpo: SUM idxset DO . cproduct

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vproduct  go to state 577
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cproduct  go to state 578
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 458

  157 vval: IF lexpr THEN . vexpr ELSE vexpr END
  286 cval: IF lexpr THEN . cexpr ELSE cexpr END

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 579
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 580
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 459

  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct
  156 vval: VABS '(' vexpr . ')'

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312
    ')'  shift, and go to state 581


state 460

  154 vexpo: SUM . idxset DO vproduct

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    idxset       go to state 582
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 461

  157 vval: IF . lexpr THEN vexpr ELSE vexpr END

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 583
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 462

  158 vval: '(' . vexpr ')'

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 309
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 161
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 463

  158 vval: '(' vexpr ')' .

    $default  reduce using rule 158 (vval)


state 464

  138 vexpr: vexpr '+' vproduct .
  145 vproduct: vproduct . '*' cfactor
  146         | vproduct . '/' cfactor
  148         | vproduct . '*' vfactor

    '*'  shift, and go to state 314
    '/'  shift, and go to state 315

    $default  reduce using rule 138 (vexpr)


state 465

  140 vexpr: vexpr '+' cproduct .
  147 vproduct: cproduct . '*' vfactor
  249 cproduct: cproduct . '*' cfactor
  250         | cproduct . '/' cfactor
  251         | cproduct . MOD cfactor
  252         | cproduct . DIV cfactor

    MOD  shift, and go to state 241
    DIV  shift, and go to state 242
    '*'  shift, and go to state 319
    '/'  shift, and go to state 244

    $default  reduce using rule 140 (vexpr)


state 466

  139 vexpr: vexpr '-' vproduct .
  145 vproduct: vproduct . '*' cfactor
  146         | vproduct . '/' cfactor
  148         | vproduct . '*' vfactor

    '*'  shift, and go to state 314
    '/'  shift, and go to state 315

    $default  reduce using rule 139 (vexpr)


state 467

  141 vexpr: vexpr '-' cproduct .
  147 vproduct: cproduct . '*' vfactor
  249 cproduct: cproduct . '*' cfactor
  250         | cproduct . '/' cfactor
  251         | cproduct . MOD cfactor
  252         | cproduct . DIV cfactor

    MOD  shift, and go to state 241
    DIV  shift, and go to state 242
    '*'  shift, and go to state 319
    '/'  shift, and go to state 244

    $default  reduce using rule 141 (vexpr)


state 468

  148 vproduct: vproduct '*' vfactor .

    $default  reduce using rule 148 (vproduct)


state 469

  145 vproduct: vproduct '*' cfactor .

    $default  reduce using rule 145 (vproduct)


state 470

  146 vproduct: vproduct '/' cfactor .

    $default  reduce using rule 146 (vproduct)


state 471

  153 vexpo: vval POW cfactor .

    $default  reduce using rule 153 (vexpo)


state 472

  142 vexpr: cexpr '+' vproduct .
  145 vproduct: vproduct . '*' cfactor
  146         | vproduct . '/' cfactor
  148         | vproduct . '*' vfactor

    '*'  shift, and go to state 314
    '/'  shift, and go to state 315

    $default  reduce using rule 142 (vexpr)


state 473

  147 vproduct: cproduct . '*' vfactor
  246 cexpr: cexpr '+' cproduct .
  249 cproduct: cproduct . '*' cfactor
  250         | cproduct . '/' cfactor
  251         | cproduct . MOD cfactor
  252         | cproduct . DIV cfactor

    MOD  shift, and go to state 241
    DIV  shift, and go to state 242
    '*'  shift, and go to state 319
    '/'  shift, and go to state 244

    $default  reduce using rule 246 (cexpr)


state 474

  143 vexpr: cexpr '-' vproduct .
  145 vproduct: vproduct . '*' cfactor
  146         | vproduct . '/' cfactor
  148         | vproduct . '*' vfactor

    '*'  shift, and go to state 314
    '/'  shift, and go to state 315

    $default  reduce using rule 143 (vexpr)


state 475

  147 vproduct: cproduct . '*' vfactor
  247 cexpr: cexpr '-' cproduct .
  249 cproduct: cproduct . '*' cfactor
  250         | cproduct . '/' cfactor
  251         | cproduct . MOD cfactor
  252         | cproduct . DIV cfactor

    MOD  shift, and go to state 241
    DIV  shift, and go to state 242
    '*'  shift, and go to state 319
    '/'  shift, and go to state 244

    $default  reduce using rule 247 (cexpr)


state 476

  147 vproduct: cproduct '*' vfactor .

    $default  reduce using rule 147 (vproduct)


state 477

   74 constraint_list: FORALL idxset DO . constraint_list

    FORALL   shift, and go to state 164
    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 165
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VIF      shift, and go to state 166
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    constraint_list  go to state 584
    constraint       go to state 168
    vexpr            go to state 169
    vproduct         go to state 157
    vfactor          go to state 158
    vexpo            go to state 159
    vval             go to state 160
    cexpr            go to state 170
    cproduct         go to state 162
    cfactor          go to state 107
    cexpo            go to state 108
    cval             go to state 109


state 478

   75 constraint_list: IF lexpr THEN . constraint_list END
   76                | IF lexpr THEN . constraint_list ELSE constraint_list END
  157 vval: IF lexpr THEN . vexpr ELSE vexpr END
  286 cval: IF lexpr THEN . cexpr ELSE cexpr END

    FORALL   shift, and go to state 164
    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 165
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VIF      shift, and go to state 166
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    constraint_list  go to state 585
    constraint       go to state 168
    vexpr            go to state 586
    vproduct         go to state 157
    vfactor          go to state 158
    vexpo            go to state 159
    vval             go to state 160
    cexpr            go to state 587
    cproduct         go to state 162
    cfactor          go to state 107
    cexpo            go to state 108
    cval             go to state 109


state 479

  123 vbool: vbool . AND vbool
  124      | vbool . OR vbool
  125      | vbool . XOR vbool
  126      | NOT vbool .

    $default  reduce using rule 126 (vbool)


state 480

  123 vbool: vbool . AND vbool
  124      | vbool . OR vbool
  125      | vbool . XOR vbool
  127      | '(' vbool . ')'

    AND  shift, and go to state 483
    OR   shift, and go to state 484
    XOR  shift, and go to state 485
    ')'  shift, and go to state 588


state 481

  105 vbool: vexpr . CMP_NE vexpr
  107      | vexpr . CMP_NE cexpr
  108      | vexpr . CMP_EQ vexpr
  110      | vexpr . CMP_EQ cexpr
  111      | vexpr . CMP_LE vexpr
  113      | vexpr . CMP_LE cexpr
  114      | vexpr . CMP_GE vexpr
  116      | vexpr . CMP_GE cexpr
  117      | vexpr . CMP_LT vexpr
  119      | vexpr . CMP_LT cexpr
  120      | vexpr . CMP_GT vexpr
  122      | vexpr . CMP_GT cexpr
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct
  158 vval: '(' vexpr . ')'

    CMP_LE  shift, and go to state 487
    CMP_GE  shift, and go to state 488
    CMP_EQ  shift, and go to state 489
    CMP_LT  shift, and go to state 490
    CMP_GT  shift, and go to state 491
    CMP_NE  shift, and go to state 492
    '+'     shift, and go to state 311
    '-'     shift, and go to state 312
    ')'     shift, and go to state 463


state 482

  106 vbool: cexpr . CMP_NE vexpr
  109      | cexpr . CMP_EQ vexpr
  112      | cexpr . CMP_LE vexpr
  115      | cexpr . CMP_GE vexpr
  118      | cexpr . CMP_LT vexpr
  121      | cexpr . CMP_GT vexpr
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  282 cval: '(' cexpr . ')'

    CMP_LE  shift, and go to state 493
    CMP_GE  shift, and go to state 494
    CMP_EQ  shift, and go to state 495
    CMP_LT  shift, and go to state 496
    CMP_GT  shift, and go to state 497
    CMP_NE  shift, and go to state 498
    '+'     shift, and go to state 317
    '-'     shift, and go to state 318
    ')'     shift, and go to state 380


state 483

  123 vbool: vbool AND . vbool

    NOT      shift, and go to state 323
    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 324

    vbool     go to state 589
    vexpr     go to state 326
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 327
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 484

  124 vbool: vbool OR . vbool

    NOT      shift, and go to state 323
    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 324

    vbool     go to state 590
    vexpr     go to state 326
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 327
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 485

  125 vbool: vbool XOR . vbool

    NOT      shift, and go to state 323
    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 324

    vbool     go to state 591
    vexpr     go to state 326
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 327
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 486

   85 constraint: VIF vbool THEN . vexpr con_type vexpr ELSE vexpr con_type vexpr END con_attr_list
   86           | VIF vbool THEN . cexpr con_type vexpr ELSE vexpr con_type vexpr END con_attr_list
   87           | VIF vbool THEN . vexpr con_type cexpr ELSE vexpr con_type vexpr END con_attr_list
   88           | VIF vbool THEN . vexpr con_type vexpr ELSE cexpr con_type vexpr END con_attr_list
   89           | VIF vbool THEN . vexpr con_type vexpr ELSE vexpr con_type cexpr END con_attr_list
   90           | VIF vbool THEN . cexpr con_type cexpr ELSE vexpr con_type vexpr END con_attr_list
   91           | VIF vbool THEN . cexpr con_type vexpr ELSE cexpr con_type vexpr END con_attr_list
   92           | VIF vbool THEN . cexpr con_type vexpr ELSE vexpr con_type cexpr END con_attr_list
   93           | VIF vbool THEN . vexpr con_type cexpr ELSE cexpr con_type vexpr END con_attr_list
   94           | VIF vbool THEN . vexpr con_type cexpr ELSE vexpr con_type cexpr END con_attr_list
   95           | VIF vbool THEN . vexpr con_type vexpr ELSE cexpr con_type cexpr END con_attr_list
   96           | VIF vbool THEN . cexpr con_type cexpr ELSE cexpr con_type vexpr END con_attr_list
   97           | VIF vbool THEN . cexpr con_type cexpr ELSE vexpr con_type cexpr END con_attr_list
   98           | VIF vbool THEN . cexpr con_type vexpr ELSE cexpr con_type cexpr END con_attr_list
   99           | VIF vbool THEN . vexpr con_type cexpr ELSE cexpr con_type cexpr END con_attr_list
  100           | VIF vbool THEN . cexpr con_type cexpr ELSE cexpr con_type cexpr END con_attr_list
  101           | VIF vbool THEN . vexpr con_type vexpr END con_attr_list
  102           | VIF vbool THEN . cexpr con_type vexpr END con_attr_list
  103           | VIF vbool THEN . vexpr con_type cexpr END con_attr_list
  104           | VIF vbool THEN . cexpr con_type cexpr END con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 592
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 593
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 487

  111 vbool: vexpr CMP_LE . vexpr
  113      | vexpr CMP_LE . cexpr

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 594
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 595
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 488

  114 vbool: vexpr CMP_GE . vexpr
  116      | vexpr CMP_GE . cexpr

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 596
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 597
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 489

  108 vbool: vexpr CMP_EQ . vexpr
  110      | vexpr CMP_EQ . cexpr

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 598
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 599
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 490

  117 vbool: vexpr CMP_LT . vexpr
  119      | vexpr CMP_LT . cexpr

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 600
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 601
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 491

  120 vbool: vexpr CMP_GT . vexpr
  122      | vexpr CMP_GT . cexpr

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 602
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 603
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 492

  105 vbool: vexpr CMP_NE . vexpr
  107      | vexpr CMP_NE . cexpr

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 604
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 605
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 493

  112 vbool: cexpr CMP_LE . vexpr

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 606
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 161
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 494

  115 vbool: cexpr CMP_GE . vexpr

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 607
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 161
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 495

  109 vbool: cexpr CMP_EQ . vexpr

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 608
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 161
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 496

  118 vbool: cexpr CMP_LT . vexpr

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 609
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 161
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 497

  121 vbool: cexpr CMP_GT . vexpr

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 610
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 161
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 498

  106 vbool: cexpr CMP_NE . vexpr

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 611
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 161
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 499

   73 constraint_list: constraint_list AND constraint .

    $default  reduce using rule 73 (constraint_list)


state 500

   77 constraint: vexpr con_type vexpr . con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 612


state 501

   78 constraint: vexpr con_type cexpr . con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 317
    '-'  shift, and go to state 318

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 613


state 502

   79 constraint: cexpr con_type vexpr . con_attr_list
   81           | cexpr con_type vexpr . CMP_LE cexpr con_attr_list
   83           | cexpr con_type vexpr . CMP_GE cexpr con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 614
    CMP_GE  shift, and go to state 615
    '+'     shift, and go to state 311
    '-'     shift, and go to state 312

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 616


state 503

   80 constraint: cexpr con_type cexpr . con_attr_list
   82           | cexpr con_type cexpr . CMP_LE cexpr con_attr_list
   84           | cexpr con_type cexpr . CMP_GE cexpr con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 617
    CMP_GE  shift, and go to state 618
    '+'     shift, and go to state 317
    '-'     shift, and go to state 318

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 619


state 504

  161 soset: FORALL idxset DO . soset

    FORALL  shift, and go to state 171
    TYPE1   shift, and go to state 172
    TYPE2   shift, and go to state 173

    $default  reduce using rule 162 (sos_type)

    soset     go to state 620
    sos_type  go to state 175


state 505

  160 soset: sos_type priority DO . vexpr

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 621
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 161
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 506

   27 name_list: name_list ',' NAME .

    $default  reduce using rule 27 (name_list)


state 507

   22 def_numb: DEFNUMB DEFNAME '(' name_list ')' ASGN . cexpr ';'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 622
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 508

   23 def_strg: DEFSTRG DEFNAME '(' name_list ')' ASGN . cexpr ';'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 623
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 509

   24 def_bool: DEFBOOL DEFNAME '(' name_list ')' ASGN . lexpr ';'

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 624
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 510

   25 def_set: DEFSET DEFNAME '(' name_list ')' ASGN . sexpr ';'

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 625
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 511

  249 cproduct: cproduct . '*' cfactor
  250         | cproduct . '/' cfactor
  251         | cproduct . MOD cfactor
  252         | cproduct . DIV cfactor
  259 cexpo: SUM idxset DO cproduct .

    MOD  shift, and go to state 241
    DIV  shift, and go to state 242
    '*'  shift, and go to state 243
    '/'  shift, and go to state 244

    MOD       [reduce using rule 259 (cexpo)]
    DIV       [reduce using rule 259 (cexpo)]
    '*'       [reduce using rule 259 (cexpo)]
    '/'       [reduce using rule 259 (cexpo)]
    $default  reduce using rule 259 (cexpo)


state 512

  262 cexpo: MIN '(' idxset ')' .

    $default  reduce using rule 262 (cexpo)


state 513

  288 cval: MIN '(' cexpr_list ')' .

    $default  reduce using rule 288 (cval)


state 514

  260 cexpo: MIN pure_idxset DO cfactor .

    $default  reduce using rule 260 (cexpo)


state 515

  263 cexpo: MAX '(' idxset ')' .

    $default  reduce using rule 263 (cexpo)


state 516

  289 cval: MAX '(' cexpr_list ')' .

    $default  reduce using rule 289 (cval)


state 517

  261 cexpo: MAX pure_idxset DO cfactor .

    $default  reduce using rule 261 (cexpo)


state 518

  197 sval: ARGMIN '(' cexpr ')' . idxset DO cexpr

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    idxset       go to state 626
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 519

  196 sval: ARGMIN idxset DO cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 196 (sval)


state 520

  199 sval: ARGMAX '(' cexpr ')' . idxset DO cexpr

    CMP_LT    shift, and go to state 59
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    idxset       go to state 627
    pure_idxset  go to state 122
    sexpr        go to state 123
    sunion       go to state 100
    sproduct     go to state 101
    sval         go to state 102
    tuple        go to state 124


state 521

  198 sval: ARGMAX idxset DO cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 198 (sval)


state 522

  253 cproduct: PROD idxset DO cfactor .

    $default  reduce using rule 253 (cproduct)


state 523

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  208 sval: IF lexpr THEN sexpr . ELSE sexpr END

    ELSE     shift, and go to state 628
    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235


state 524

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  286 cval: IF lexpr THEN cexpr . ELSE cexpr END

    ELSE  shift, and go to state 629
    '+'   shift, and go to state 239
    '-'   shift, and go to state 240


state 525

  188 sproduct: INTER idxset DO sval .

    $default  reduce using rule 188 (sproduct)


state 526

  184 sunion: UNION idxset DO sproduct .
  186 sproduct: sproduct . CROSS sval
  187         | sproduct . '*' sval

    CROSS  shift, and go to state 236
    '*'    shift, and go to state 237

    $default  reduce using rule 184 (sunion)


state 527

  206 sval: PROJ '(' sexpr ',' . tuple ')'

    CMP_LT  shift, and go to state 59

    tuple  go to state 630


state 528

  272 cval: CARD '(' sexpr ')' .

    $default  reduce using rule 272 (cval)


state 529

  273 cval: ABS '(' cexpr ')' .

    $default  reduce using rule 273 (cval)


state 530

  274 cval: SGN '(' cexpr ')' .

    $default  reduce using rule 274 (cval)


state 531

  275 cval: ROUND '(' cexpr ')' .

    $default  reduce using rule 275 (cval)


state 532

  276 cval: FLOOR '(' cexpr ')' .

    $default  reduce using rule 276 (cval)


state 533

  277 cval: CEIL '(' cexpr ')' .

    $default  reduce using rule 277 (cval)


state 534

  278 cval: LOG '(' cexpr ')' .

    $default  reduce using rule 278 (cval)


state 535

  279 cval: LN '(' cexpr ')' .

    $default  reduce using rule 279 (cval)


state 536

  280 cval: EXP '(' cexpr ')' .

    $default  reduce using rule 280 (cval)


state 537

  281 cval: SQRT '(' cexpr ')' .

    $default  reduce using rule 281 (cval)


state 538

  285 cval: RANDOM '(' cexpr ',' . cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 631
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 539

  287 cval: ORD '(' sexpr ',' . cexpr ',' cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 632
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 540

  207 sval: INDEXSET '(' SETSYM ')' .

    $default  reduce using rule 207 (sval)


state 541

  283 cval: LENGTH '(' cexpr ')' .

    $default  reduce using rule 283 (cval)


state 542

  284 cval: SUBSTR '(' cexpr ',' . cexpr ',' cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 633
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 543

  242 symidx: '[' cexpr_list ']' .

    $default  reduce using rule 242 (symidx)


state 544

  269 cval: NUMBDEF '(' cexpr_list ')' .

    $default  reduce using rule 269 (cval)


state 545

  270 cval: STRGDEF '(' cexpr_list ')' .

    $default  reduce using rule 270 (cval)


state 546

  190 sval: SETDEF '(' cexpr_list ')' .

    $default  reduce using rule 190 (sval)


state 547

  205 sval: '{' idxset DO tuple . '}'

    '}'  shift, and go to state 634


state 548

  204 sval: '{' idxset DO cexpr . '}'
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    '}'  shift, and go to state 635


state 549

  216 tuple_list: tuple_list ',' tuple .

    $default  reduce using rule 216 (tuple_list)


state 550

  192 sval: '{' cexpr TO cexpr . BY cexpr '}'
  193     | '{' cexpr TO cexpr . '}'
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    BY   shift, and go to state 636
    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    '}'  shift, and go to state 637


state 551

  194 sval: '{' cexpr UNTIL cexpr . BY cexpr '}'
  195     | '{' cexpr UNTIL cexpr . '}'
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    BY   shift, and go to state 638
    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    '}'  shift, and go to state 639


state 552

  236 lexpr: EXISTS '(' idxset ')' .

    $default  reduce using rule 236 (lexpr)


state 553

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  208 sval: IF lexpr THEN sexpr . ELSE sexpr END
  224 lexpr: sexpr . CMP_EQ sexpr
  225      | sexpr . CMP_NE sexpr
  226      | sexpr . CMP_GT sexpr
  227      | sexpr . CMP_GE sexpr
  228      | sexpr . CMP_LT sexpr
  229      | sexpr . CMP_LE sexpr

    CMP_LE   shift, and go to state 254
    CMP_GE   shift, and go to state 255
    CMP_EQ   shift, and go to state 256
    CMP_LT   shift, and go to state 257
    CMP_GT   shift, and go to state 258
    CMP_NE   shift, and go to state 259
    ELSE     shift, and go to state 628
    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235


state 554

  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr
  238      | IF lexpr THEN lexpr . ELSE lexpr END

    AND   shift, and go to state 260
    OR    shift, and go to state 261
    XOR   shift, and go to state 262
    ELSE  shift, and go to state 640


state 555

  218 lexpr: cexpr . CMP_EQ cexpr
  219      | cexpr . CMP_NE cexpr
  220      | cexpr . CMP_GT cexpr
  221      | cexpr . CMP_GE cexpr
  222      | cexpr . CMP_LT cexpr
  223      | cexpr . CMP_LE cexpr
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  286 cval: IF lexpr THEN cexpr . ELSE cexpr END

    CMP_LE  shift, and go to state 264
    CMP_GE  shift, and go to state 265
    CMP_EQ  shift, and go to state 266
    CMP_LT  shift, and go to state 267
    CMP_GT  shift, and go to state 268
    CMP_NE  shift, and go to state 269
    ELSE    shift, and go to state 629
    '+'     shift, and go to state 239
    '-'     shift, and go to state 240


state 556

  237 lexpr: BOOLDEF '(' cexpr_list ')' .

    $default  reduce using rule 237 (lexpr)


state 557

  174 pure_idxset: tuple IN sexpr WITH . lexpr

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 641
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 558

   18 set_entry_list: SUBSETS '(' . sexpr ',' cexpr ')'
   19               | SUBSETS '(' . sexpr ',' cexpr ',' cexpr ')'

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 642
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 559

   20 set_entry_list: POWERSET '(' . sexpr ')'

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 643
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 560

   15 decl_set: DECLSET NAME '[' ']' ASGN set_entry_list ';' .

    $default  reduce using rule 15 (decl_set)


state 561

   17 set_entry_list: set_entry_list ',' . set_entry

    CMP_LT  shift, and go to state 59

    set_entry  go to state 644
    tuple      go to state 431


state 562

   21 set_entry: tuple sexpr .
  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235

    $default  reduce using rule 21 (set_entry)


state 563

   14 decl_set: DECLSET NAME '[' idxset ']' ASGN set_entry_list . ';'
   17 set_entry_list: set_entry_list . ',' set_entry

    ';'  shift, and go to state 645
    ','  shift, and go to state 561


state 564

   13 decl_set: DECLSET NAME '[' idxset ']' ASGN sexpr . ';'
  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235
    ';'      shift, and go to state 646


state 565

  209 read: READ cexpr AS cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 209 (read)


state 566

   67 matrix_body: matrix_head cexpr_list WITH .

    $default  reduce using rule 67 (matrix_body)


state 567

   68 matrix_body: matrix_body matrix_head cexpr_list . WITH
  244 cexpr_list: cexpr_list . ',' cexpr

    WITH  shift, and go to state 647
    ','   shift, and go to state 238


state 568

   28 decl_par: DECLPAR NAME '[' idxset ']' ASGN cexpr_entry_list . par_default ';'
   62 cexpr_entry_list: cexpr_entry_list . ',' cexpr_entry

    DEFAULT  shift, and go to state 648
    ','      shift, and go to state 280

    $default  reduce using rule 34 (par_default)

    par_default  go to state 649


state 569

   29 decl_par: DECLPAR NAME '[' idxset ']' ASGN cexpr . ';'
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ';'  shift, and go to state 650


state 570

   50 lower: CMP_GE IF lexpr THEN . cexpr ELSE '-' INFTY END
   51      | CMP_GE IF lexpr THEN . '-' INFTY ELSE cexpr END
  286 cval: IF lexpr THEN . cexpr ELSE cexpr END

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 651
    '('      shift, and go to state 132

    cexpr     go to state 652
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 571

   55 upper: CMP_LE IF lexpr . THEN cexpr ELSE INFTY END
   56      | CMP_LE IF lexpr . THEN INFTY ELSE cexpr END
  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr
  286 cval: IF lexpr . THEN cexpr ELSE cexpr END

    AND   shift, and go to state 260
    OR    shift, and go to state 261
    XOR   shift, and go to state 262
    THEN  shift, and go to state 653


state 572

   43 decl_var: DECLVAR NAME INTEGER lower upper priority startval . ';'

    ';'  shift, and go to state 654


state 573

   40 decl_var: DECLVAR NAME '[' idxset ']' BINARY priority . startval ';'

    STARTVAL  shift, and go to state 291

    $default  reduce using rule 59 (startval)

    startval  go to state 655


state 574

   42 decl_var: DECLVAR NAME '[' idxset ']' INTEGER lower . upper priority startval ';'

    CMP_LE  shift, and go to state 296

    $default  reduce using rule 52 (upper)

    upper  go to state 656


state 575

   38 decl_var: DECLVAR NAME '[' idxset ']' IMPLICIT BINARY . ';'

    ';'  shift, and go to state 657


state 576

   36 decl_var: DECLVAR NAME '[' idxset ']' var_type lower . upper ';'

    CMP_LE  shift, and go to state 296

    $default  reduce using rule 52 (upper)

    upper  go to state 658


state 577

  145 vproduct: vproduct . '*' cfactor
  146         | vproduct . '/' cfactor
  148         | vproduct . '*' vfactor
  154 vexpo: SUM idxset DO vproduct .

    '*'  shift, and go to state 314
    '/'  shift, and go to state 315

    '*'       [reduce using rule 154 (vexpo)]
    '/'       [reduce using rule 154 (vexpo)]
    $default  reduce using rule 154 (vexpo)


state 578

  147 vproduct: cproduct . '*' vfactor
  249 cproduct: cproduct . '*' cfactor
  250         | cproduct . '/' cfactor
  251         | cproduct . MOD cfactor
  252         | cproduct . DIV cfactor
  259 cexpo: SUM idxset DO cproduct .

    MOD  shift, and go to state 241
    DIV  shift, and go to state 242
    '*'  shift, and go to state 319
    '/'  shift, and go to state 244

    MOD       [reduce using rule 259 (cexpo)]
    DIV       [reduce using rule 259 (cexpo)]
    '*'       [reduce using rule 259 (cexpo)]
    '/'       [reduce using rule 259 (cexpo)]
    $default  reduce using rule 259 (cexpo)


state 579

  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct
  157 vval: IF lexpr THEN vexpr . ELSE vexpr END

    ELSE  shift, and go to state 659
    '+'   shift, and go to state 311
    '-'   shift, and go to state 312


state 580

  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  286 cval: IF lexpr THEN cexpr . ELSE cexpr END

    ELSE  shift, and go to state 629
    '+'   shift, and go to state 317
    '-'   shift, and go to state 318


state 581

  156 vval: VABS '(' vexpr ')' .

    $default  reduce using rule 156 (vval)


state 582

  154 vexpo: SUM idxset . DO vproduct

    DO  shift, and go to state 660


state 583

  157 vval: IF lexpr . THEN vexpr ELSE vexpr END
  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr

    AND   shift, and go to state 260
    OR    shift, and go to state 261
    XOR   shift, and go to state 262
    THEN  shift, and go to state 661


state 584

   73 constraint_list: constraint_list . AND constraint
   74                | FORALL idxset DO constraint_list .

    AND  shift, and go to state 328

    AND       [reduce using rule 74 (constraint_list)]
    $default  reduce using rule 74 (constraint_list)


state 585

   73 constraint_list: constraint_list . AND constraint
   75                | IF lexpr THEN constraint_list . END
   76                | IF lexpr THEN constraint_list . ELSE constraint_list END

    AND   shift, and go to state 328
    ELSE  shift, and go to state 662
    END   shift, and go to state 663


state 586

   77 constraint: vexpr . con_type vexpr con_attr_list
   78           | vexpr . con_type cexpr con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct
  157 vval: IF lexpr THEN vexpr . ELSE vexpr END

    CMP_LE  shift, and go to state 330
    CMP_GE  shift, and go to state 331
    CMP_EQ  shift, and go to state 332
    ELSE    shift, and go to state 659
    '+'     shift, and go to state 311
    '-'     shift, and go to state 312

    con_type  go to state 333


state 587

   79 constraint: cexpr . con_type vexpr con_attr_list
   80           | cexpr . con_type cexpr con_attr_list
   81           | cexpr . con_type vexpr CMP_LE cexpr con_attr_list
   82           | cexpr . con_type cexpr CMP_LE cexpr con_attr_list
   83           | cexpr . con_type vexpr CMP_GE cexpr con_attr_list
   84           | cexpr . con_type cexpr CMP_GE cexpr con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  286 cval: IF lexpr THEN cexpr . ELSE cexpr END

    CMP_LE  shift, and go to state 330
    CMP_GE  shift, and go to state 331
    CMP_EQ  shift, and go to state 332
    ELSE    shift, and go to state 629
    '+'     shift, and go to state 317
    '-'     shift, and go to state 318

    con_type  go to state 334


state 588

  127 vbool: '(' vbool ')' .

    $default  reduce using rule 127 (vbool)


state 589

  123 vbool: vbool . AND vbool
  123      | vbool AND vbool .
  124      | vbool . OR vbool
  125      | vbool . XOR vbool

    $default  reduce using rule 123 (vbool)


state 590

  123 vbool: vbool . AND vbool
  124      | vbool . OR vbool
  124      | vbool OR vbool .
  125      | vbool . XOR vbool

    AND  shift, and go to state 483

    $default  reduce using rule 124 (vbool)


state 591

  123 vbool: vbool . AND vbool
  124      | vbool . OR vbool
  125      | vbool . XOR vbool
  125      | vbool XOR vbool .

    AND  shift, and go to state 483

    $default  reduce using rule 125 (vbool)


state 592

   85 constraint: VIF vbool THEN vexpr . con_type vexpr ELSE vexpr con_type vexpr END con_attr_list
   87           | VIF vbool THEN vexpr . con_type cexpr ELSE vexpr con_type vexpr END con_attr_list
   88           | VIF vbool THEN vexpr . con_type vexpr ELSE cexpr con_type vexpr END con_attr_list
   89           | VIF vbool THEN vexpr . con_type vexpr ELSE vexpr con_type cexpr END con_attr_list
   93           | VIF vbool THEN vexpr . con_type cexpr ELSE cexpr con_type vexpr END con_attr_list
   94           | VIF vbool THEN vexpr . con_type cexpr ELSE vexpr con_type cexpr END con_attr_list
   95           | VIF vbool THEN vexpr . con_type vexpr ELSE cexpr con_type cexpr END con_attr_list
   99           | VIF vbool THEN vexpr . con_type cexpr ELSE cexpr con_type cexpr END con_attr_list
  101           | VIF vbool THEN vexpr . con_type vexpr END con_attr_list
  103           | VIF vbool THEN vexpr . con_type cexpr END con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 330
    CMP_GE  shift, and go to state 331
    CMP_EQ  shift, and go to state 332
    '+'     shift, and go to state 311
    '-'     shift, and go to state 312

    con_type  go to state 664


state 593

   86 constraint: VIF vbool THEN cexpr . con_type vexpr ELSE vexpr con_type vexpr END con_attr_list
   90           | VIF vbool THEN cexpr . con_type cexpr ELSE vexpr con_type vexpr END con_attr_list
   91           | VIF vbool THEN cexpr . con_type vexpr ELSE cexpr con_type vexpr END con_attr_list
   92           | VIF vbool THEN cexpr . con_type vexpr ELSE vexpr con_type cexpr END con_attr_list
   96           | VIF vbool THEN cexpr . con_type cexpr ELSE cexpr con_type vexpr END con_attr_list
   97           | VIF vbool THEN cexpr . con_type cexpr ELSE vexpr con_type cexpr END con_attr_list
   98           | VIF vbool THEN cexpr . con_type vexpr ELSE cexpr con_type cexpr END con_attr_list
  100           | VIF vbool THEN cexpr . con_type cexpr ELSE cexpr con_type cexpr END con_attr_list
  102           | VIF vbool THEN cexpr . con_type vexpr END con_attr_list
  104           | VIF vbool THEN cexpr . con_type cexpr END con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 330
    CMP_GE  shift, and go to state 331
    CMP_EQ  shift, and go to state 332
    '+'     shift, and go to state 317
    '-'     shift, and go to state 318

    con_type  go to state 665


state 594

  111 vbool: vexpr CMP_LE vexpr .
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312

    $default  reduce using rule 111 (vbool)


state 595

  113 vbool: vexpr CMP_LE cexpr .
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 317
    '-'  shift, and go to state 318

    $default  reduce using rule 113 (vbool)


state 596

  114 vbool: vexpr CMP_GE vexpr .
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312

    $default  reduce using rule 114 (vbool)


state 597

  116 vbool: vexpr CMP_GE cexpr .
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 317
    '-'  shift, and go to state 318

    $default  reduce using rule 116 (vbool)


state 598

  108 vbool: vexpr CMP_EQ vexpr .
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312

    $default  reduce using rule 108 (vbool)


state 599

  110 vbool: vexpr CMP_EQ cexpr .
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 317
    '-'  shift, and go to state 318

    $default  reduce using rule 110 (vbool)


state 600

  117 vbool: vexpr CMP_LT vexpr .
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312

    $default  reduce using rule 117 (vbool)


state 601

  119 vbool: vexpr CMP_LT cexpr .
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 317
    '-'  shift, and go to state 318

    $default  reduce using rule 119 (vbool)


state 602

  120 vbool: vexpr CMP_GT vexpr .
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312

    $default  reduce using rule 120 (vbool)


state 603

  122 vbool: vexpr CMP_GT cexpr .
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 317
    '-'  shift, and go to state 318

    $default  reduce using rule 122 (vbool)


state 604

  105 vbool: vexpr CMP_NE vexpr .
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312

    $default  reduce using rule 105 (vbool)


state 605

  107 vbool: vexpr CMP_NE cexpr .
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 317
    '-'  shift, and go to state 318

    $default  reduce using rule 107 (vbool)


state 606

  112 vbool: cexpr CMP_LE vexpr .
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312

    $default  reduce using rule 112 (vbool)


state 607

  115 vbool: cexpr CMP_GE vexpr .
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312

    $default  reduce using rule 115 (vbool)


state 608

  109 vbool: cexpr CMP_EQ vexpr .
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312

    $default  reduce using rule 109 (vbool)


state 609

  118 vbool: cexpr CMP_LT vexpr .
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312

    $default  reduce using rule 118 (vbool)


state 610

  121 vbool: cexpr CMP_GT vexpr .
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312

    $default  reduce using rule 121 (vbool)


state 611

  106 vbool: cexpr CMP_NE vexpr .
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312

    $default  reduce using rule 106 (vbool)


state 612

   77 constraint: vexpr con_type vexpr con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 77 (constraint)


state 613

   78 constraint: vexpr con_type cexpr con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 78 (constraint)


state 614

   81 constraint: cexpr con_type vexpr CMP_LE . cexpr con_attr_list

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 667
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 615

   83 constraint: cexpr con_type vexpr CMP_GE . cexpr con_attr_list

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 668
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 616

   79 constraint: cexpr con_type vexpr con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 79 (constraint)


state 617

   82 constraint: cexpr con_type cexpr CMP_LE . cexpr con_attr_list

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 669
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 618

   84 constraint: cexpr con_type cexpr CMP_GE . cexpr con_attr_list

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 670
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 619

   80 constraint: cexpr con_type cexpr con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 80 (constraint)


state 620

  161 soset: FORALL idxset DO soset .

    $default  reduce using rule 161 (soset)


state 621

  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct
  160 soset: sos_type priority DO vexpr .

    '+'  shift, and go to state 311
    '-'  shift, and go to state 312

    $default  reduce using rule 160 (soset)


state 622

   22 def_numb: DEFNUMB DEFNAME '(' name_list ')' ASGN cexpr . ';'
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ';'  shift, and go to state 671


state 623

   23 def_strg: DEFSTRG DEFNAME '(' name_list ')' ASGN cexpr . ';'
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ';'  shift, and go to state 672


state 624

   24 def_bool: DEFBOOL DEFNAME '(' name_list ')' ASGN lexpr . ';'
  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr

    AND  shift, and go to state 260
    OR   shift, and go to state 261
    XOR  shift, and go to state 262
    ';'  shift, and go to state 673


state 625

   25 def_set: DEFSET DEFNAME '(' name_list ')' ASGN sexpr . ';'
  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235
    ';'      shift, and go to state 674


state 626

  197 sval: ARGMIN '(' cexpr ')' idxset . DO cexpr

    DO  shift, and go to state 675


state 627

  199 sval: ARGMAX '(' cexpr ')' idxset . DO cexpr

    DO  shift, and go to state 676


state 628

  208 sval: IF lexpr THEN sexpr ELSE . sexpr END

    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    IF        shift, and go to state 119
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    INDEXSET  shift, and go to state 82
    SETSYM    shift, and go to state 88
    SETDEF    shift, and go to state 91
    '('       shift, and go to state 120
    '{'       shift, and go to state 98

    sexpr     go to state 677
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102


state 629

  286 cval: IF lexpr THEN cexpr ELSE . cexpr END

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 678
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 630

  206 sval: PROJ '(' sexpr ',' tuple . ')'

    ')'  shift, and go to state 679


state 631

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  285 cval: RANDOM '(' cexpr ',' cexpr . ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 680


state 632

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  287 cval: ORD '(' sexpr ',' cexpr . ',' cexpr ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ','  shift, and go to state 681


state 633

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  284 cval: SUBSTR '(' cexpr ',' cexpr . ',' cexpr ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ','  shift, and go to state 682


state 634

  205 sval: '{' idxset DO tuple '}' .

    $default  reduce using rule 205 (sval)


state 635

  204 sval: '{' idxset DO cexpr '}' .

    $default  reduce using rule 204 (sval)


state 636

  192 sval: '{' cexpr TO cexpr BY . cexpr '}'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 683
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 637

  193 sval: '{' cexpr TO cexpr '}' .

    $default  reduce using rule 193 (sval)


state 638

  194 sval: '{' cexpr UNTIL cexpr BY . cexpr '}'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 684
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 639

  195 sval: '{' cexpr UNTIL cexpr '}' .

    $default  reduce using rule 195 (sval)


state 640

  238 lexpr: IF lexpr THEN lexpr ELSE . lexpr END

    EXISTS    shift, and go to state 110
    CMP_LT    shift, and go to state 59
    NOT       shift, and go to state 111
    SUM       shift, and go to state 60
    MIN       shift, and go to state 61
    MAX       shift, and go to state 62
    ARGMIN    shift, and go to state 63
    ARGMAX    shift, and go to state 64
    PROD      shift, and go to state 65
    IF        shift, and go to state 112
    INTER     shift, and go to state 67
    UNION     shift, and go to state 68
    PROJ      shift, and go to state 69
    CARD      shift, and go to state 70
    ABS       shift, and go to state 71
    SGN       shift, and go to state 72
    ROUND     shift, and go to state 73
    FLOOR     shift, and go to state 74
    CEIL      shift, and go to state 75
    LOG       shift, and go to state 76
    LN        shift, and go to state 77
    EXP       shift, and go to state 78
    SQRT      shift, and go to state 79
    RANDOM    shift, and go to state 80
    ORD       shift, and go to state 81
    INDEXSET  shift, and go to state 82
    LENGTH    shift, and go to state 83
    SUBSTR    shift, and go to state 84
    NUMBSYM   shift, and go to state 85
    STRGSYM   shift, and go to state 86
    SETSYM    shift, and go to state 88
    NUMBDEF   shift, and go to state 89
    STRGDEF   shift, and go to state 90
    BOOLDEF   shift, and go to state 113
    SETDEF    shift, and go to state 91
    NAME      shift, and go to state 92
    STRG      shift, and go to state 93
    NUMB      shift, and go to state 94
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '('       shift, and go to state 114
    '{'       shift, and go to state 98

    sexpr     go to state 115
    sunion    go to state 100
    sproduct  go to state 101
    sval      go to state 102
    lexpr     go to state 685
    tuple     go to state 117
    cexpr     go to state 118
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 641

  174 pure_idxset: tuple IN sexpr WITH lexpr .
  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr

    AND  shift, and go to state 260
    OR   shift, and go to state 261
    XOR  shift, and go to state 262

    $default  reduce using rule 174 (pure_idxset)


state 642

   18 set_entry_list: SUBSETS '(' sexpr . ',' cexpr ')'
   19               | SUBSETS '(' sexpr . ',' cexpr ',' cexpr ')'
  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235
    ','      shift, and go to state 686


state 643

   20 set_entry_list: POWERSET '(' sexpr . ')'
  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion

    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235
    ')'      shift, and go to state 687


state 644

   17 set_entry_list: set_entry_list ',' set_entry .

    $default  reduce using rule 17 (set_entry_list)


state 645

   14 decl_set: DECLSET NAME '[' idxset ']' ASGN set_entry_list ';' .

    $default  reduce using rule 14 (decl_set)


state 646

   13 decl_set: DECLSET NAME '[' idxset ']' ASGN sexpr ';' .

    $default  reduce using rule 13 (decl_set)


state 647

   68 matrix_body: matrix_body matrix_head cexpr_list WITH .

    $default  reduce using rule 68 (matrix_body)


state 648

   35 par_default: DEFAULT . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 688
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 649

   28 decl_par: DECLPAR NAME '[' idxset ']' ASGN cexpr_entry_list par_default . ';'

    ';'  shift, and go to state 689


state 650

   29 decl_par: DECLPAR NAME '[' idxset ']' ASGN cexpr ';' .

    $default  reduce using rule 29 (decl_par)


state 651

   51 lower: CMP_GE IF lexpr THEN '-' . INFTY ELSE cexpr END
  256 cfactor: '-' . cexpo

    INFTY    shift, and go to state 690
    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '('      shift, and go to state 132

    cexpo  go to state 220
    cval   go to state 109


state 652

   50 lower: CMP_GE IF lexpr THEN cexpr . ELSE '-' INFTY END
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  286 cval: IF lexpr THEN cexpr . ELSE cexpr END

    ELSE  shift, and go to state 691
    '+'   shift, and go to state 239
    '-'   shift, and go to state 240


state 653

   55 upper: CMP_LE IF lexpr THEN . cexpr ELSE INFTY END
   56      | CMP_LE IF lexpr THEN . INFTY ELSE cexpr END
  286 cval: IF lexpr THEN . cexpr ELSE cexpr END

    INFTY    shift, and go to state 692
    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 693
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 654

   43 decl_var: DECLVAR NAME INTEGER lower upper priority startval ';' .

    $default  reduce using rule 43 (decl_var)


state 655

   40 decl_var: DECLVAR NAME '[' idxset ']' BINARY priority startval . ';'

    ';'  shift, and go to state 694


state 656

   42 decl_var: DECLVAR NAME '[' idxset ']' INTEGER lower upper . priority startval ';'

    PRIORITY  shift, and go to state 141

    $default  reduce using rule 57 (priority)

    priority  go to state 695


state 657

   38 decl_var: DECLVAR NAME '[' idxset ']' IMPLICIT BINARY ';' .

    $default  reduce using rule 38 (decl_var)


state 658

   36 decl_var: DECLVAR NAME '[' idxset ']' var_type lower upper . ';'

    ';'  shift, and go to state 696


state 659

  157 vval: IF lexpr THEN vexpr ELSE . vexpr END

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 697
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 161
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 660

  154 vexpo: SUM idxset DO . vproduct

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vproduct  go to state 577
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cproduct  go to state 698
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 661

  157 vval: IF lexpr THEN . vexpr ELSE vexpr END

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 579
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 161
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 662

   76 constraint_list: IF lexpr THEN constraint_list ELSE . constraint_list END

    FORALL   shift, and go to state 164
    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 165
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VIF      shift, and go to state 166
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    constraint_list  go to state 699
    constraint       go to state 168
    vexpr            go to state 169
    vproduct         go to state 157
    vfactor          go to state 158
    vexpo            go to state 159
    vval             go to state 160
    cexpr            go to state 170
    cproduct         go to state 162
    cfactor          go to state 107
    cexpo            go to state 108
    cval             go to state 109


state 663

   75 constraint_list: IF lexpr THEN constraint_list END .

    $default  reduce using rule 75 (constraint_list)


state 664

   85 constraint: VIF vbool THEN vexpr con_type . vexpr ELSE vexpr con_type vexpr END con_attr_list
   87           | VIF vbool THEN vexpr con_type . cexpr ELSE vexpr con_type vexpr END con_attr_list
   88           | VIF vbool THEN vexpr con_type . vexpr ELSE cexpr con_type vexpr END con_attr_list
   89           | VIF vbool THEN vexpr con_type . vexpr ELSE vexpr con_type cexpr END con_attr_list
   93           | VIF vbool THEN vexpr con_type . cexpr ELSE cexpr con_type vexpr END con_attr_list
   94           | VIF vbool THEN vexpr con_type . cexpr ELSE vexpr con_type cexpr END con_attr_list
   95           | VIF vbool THEN vexpr con_type . vexpr ELSE cexpr con_type cexpr END con_attr_list
   99           | VIF vbool THEN vexpr con_type . cexpr ELSE cexpr con_type cexpr END con_attr_list
  101           | VIF vbool THEN vexpr con_type . vexpr END con_attr_list
  103           | VIF vbool THEN vexpr con_type . cexpr END con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 700
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 701
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 665

   86 constraint: VIF vbool THEN cexpr con_type . vexpr ELSE vexpr con_type vexpr END con_attr_list
   90           | VIF vbool THEN cexpr con_type . cexpr ELSE vexpr con_type vexpr END con_attr_list
   91           | VIF vbool THEN cexpr con_type . vexpr ELSE cexpr con_type vexpr END con_attr_list
   92           | VIF vbool THEN cexpr con_type . vexpr ELSE vexpr con_type cexpr END con_attr_list
   96           | VIF vbool THEN cexpr con_type . cexpr ELSE cexpr con_type vexpr END con_attr_list
   97           | VIF vbool THEN cexpr con_type . cexpr ELSE vexpr con_type cexpr END con_attr_list
   98           | VIF vbool THEN cexpr con_type . vexpr ELSE cexpr con_type cexpr END con_attr_list
  100           | VIF vbool THEN cexpr con_type . cexpr ELSE cexpr con_type cexpr END con_attr_list
  102           | VIF vbool THEN cexpr con_type . vexpr END con_attr_list
  104           | VIF vbool THEN cexpr con_type . cexpr END con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 702
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 703
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 666

  129 con_attr_list: con_attr_list ',' . con_attr

    SCALE      shift, and go to state 704
    SEPARATE   shift, and go to state 705
    CHECKONLY  shift, and go to state 706
    INDICATOR  shift, and go to state 707

    con_attr  go to state 708


state 667

   81 constraint: cexpr con_type vexpr CMP_LE cexpr . con_attr_list
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 709


state 668

   83 constraint: cexpr con_type vexpr CMP_GE cexpr . con_attr_list
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 710


state 669

   82 constraint: cexpr con_type cexpr CMP_LE cexpr . con_attr_list
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 711


state 670

   84 constraint: cexpr con_type cexpr CMP_GE cexpr . con_attr_list
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 712


state 671

   22 def_numb: DEFNUMB DEFNAME '(' name_list ')' ASGN cexpr ';' .

    $default  reduce using rule 22 (def_numb)


state 672

   23 def_strg: DEFSTRG DEFNAME '(' name_list ')' ASGN cexpr ';' .

    $default  reduce using rule 23 (def_strg)


state 673

   24 def_bool: DEFBOOL DEFNAME '(' name_list ')' ASGN lexpr ';' .

    $default  reduce using rule 24 (def_bool)


state 674

   25 def_set: DEFSET DEFNAME '(' name_list ')' ASGN sexpr ';' .

    $default  reduce using rule 25 (def_set)


state 675

  197 sval: ARGMIN '(' cexpr ')' idxset DO . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 713
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 676

  199 sval: ARGMAX '(' cexpr ')' idxset DO . cexpr

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 714
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 677

  177 sexpr: sexpr . UNION sunion
  178      | sexpr . '+' sunion
  179      | sexpr . SYMDIFF sunion
  180      | sexpr . '-' sunion
  181      | sexpr . WITHOUT sunion
  182      | sexpr . INTER sunion
  208 sval: IF lexpr THEN sexpr ELSE sexpr . END

    END      shift, and go to state 715
    INTER    shift, and go to state 230
    UNION    shift, and go to state 231
    SYMDIFF  shift, and go to state 232
    WITHOUT  shift, and go to state 233
    '+'      shift, and go to state 234
    '-'      shift, and go to state 235


state 678

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  286 cval: IF lexpr THEN cexpr ELSE cexpr . END

    END  shift, and go to state 716
    '+'  shift, and go to state 239
    '-'  shift, and go to state 240


state 679

  206 sval: PROJ '(' sexpr ',' tuple ')' .

    $default  reduce using rule 206 (sval)


state 680

  285 cval: RANDOM '(' cexpr ',' cexpr ')' .

    $default  reduce using rule 285 (cval)


state 681

  287 cval: ORD '(' sexpr ',' cexpr ',' . cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 717
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 682

  284 cval: SUBSTR '(' cexpr ',' cexpr ',' . cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 718
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 683

  192 sval: '{' cexpr TO cexpr BY cexpr . '}'
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    '}'  shift, and go to state 719


state 684

  194 sval: '{' cexpr UNTIL cexpr BY cexpr . '}'
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    '}'  shift, and go to state 720


state 685

  230 lexpr: lexpr . AND lexpr
  231      | lexpr . OR lexpr
  232      | lexpr . XOR lexpr
  238      | IF lexpr THEN lexpr ELSE lexpr . END

    AND  shift, and go to state 260
    OR   shift, and go to state 261
    XOR  shift, and go to state 262
    END  shift, and go to state 721


state 686

   18 set_entry_list: SUBSETS '(' sexpr ',' . cexpr ')'
   19               | SUBSETS '(' sexpr ',' . cexpr ',' cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 722
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 687

   20 set_entry_list: POWERSET '(' sexpr ')' .

    $default  reduce using rule 20 (set_entry_list)


state 688

   35 par_default: DEFAULT cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 35 (par_default)


state 689

   28 decl_par: DECLPAR NAME '[' idxset ']' ASGN cexpr_entry_list par_default ';' .

    $default  reduce using rule 28 (decl_par)


state 690

   51 lower: CMP_GE IF lexpr THEN '-' INFTY . ELSE cexpr END

    ELSE  shift, and go to state 723


state 691

   50 lower: CMP_GE IF lexpr THEN cexpr ELSE . '-' INFTY END
  286 cval: IF lexpr THEN cexpr ELSE . cexpr END

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 724
    '('      shift, and go to state 132

    cexpr     go to state 678
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 692

   56 upper: CMP_LE IF lexpr THEN INFTY . ELSE cexpr END

    ELSE  shift, and go to state 725


state 693

   55 upper: CMP_LE IF lexpr THEN cexpr . ELSE INFTY END
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  286 cval: IF lexpr THEN cexpr . ELSE cexpr END

    ELSE  shift, and go to state 726
    '+'   shift, and go to state 239
    '-'   shift, and go to state 240


state 694

   40 decl_var: DECLVAR NAME '[' idxset ']' BINARY priority startval ';' .

    $default  reduce using rule 40 (decl_var)


state 695

   42 decl_var: DECLVAR NAME '[' idxset ']' INTEGER lower upper priority . startval ';'

    STARTVAL  shift, and go to state 291

    $default  reduce using rule 59 (startval)

    startval  go to state 727


state 696

   36 decl_var: DECLVAR NAME '[' idxset ']' var_type lower upper ';' .

    $default  reduce using rule 36 (decl_var)


state 697

  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct
  157 vval: IF lexpr THEN vexpr ELSE vexpr . END

    END  shift, and go to state 728
    '+'  shift, and go to state 311
    '-'  shift, and go to state 312


state 698

  147 vproduct: cproduct . '*' vfactor
  249 cproduct: cproduct . '*' cfactor
  250         | cproduct . '/' cfactor
  251         | cproduct . MOD cfactor
  252         | cproduct . DIV cfactor

    MOD  shift, and go to state 241
    DIV  shift, and go to state 242
    '*'  shift, and go to state 319
    '/'  shift, and go to state 244


state 699

   73 constraint_list: constraint_list . AND constraint
   76                | IF lexpr THEN constraint_list ELSE constraint_list . END

    AND  shift, and go to state 328
    END  shift, and go to state 729


state 700

   85 constraint: VIF vbool THEN vexpr con_type vexpr . ELSE vexpr con_type vexpr END con_attr_list
   88           | VIF vbool THEN vexpr con_type vexpr . ELSE cexpr con_type vexpr END con_attr_list
   89           | VIF vbool THEN vexpr con_type vexpr . ELSE vexpr con_type cexpr END con_attr_list
   95           | VIF vbool THEN vexpr con_type vexpr . ELSE cexpr con_type cexpr END con_attr_list
  101           | VIF vbool THEN vexpr con_type vexpr . END con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    ELSE  shift, and go to state 730
    END   shift, and go to state 731
    '+'   shift, and go to state 311
    '-'   shift, and go to state 312


state 701

   87 constraint: VIF vbool THEN vexpr con_type cexpr . ELSE vexpr con_type vexpr END con_attr_list
   93           | VIF vbool THEN vexpr con_type cexpr . ELSE cexpr con_type vexpr END con_attr_list
   94           | VIF vbool THEN vexpr con_type cexpr . ELSE vexpr con_type cexpr END con_attr_list
   99           | VIF vbool THEN vexpr con_type cexpr . ELSE cexpr con_type cexpr END con_attr_list
  103           | VIF vbool THEN vexpr con_type cexpr . END con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    ELSE  shift, and go to state 732
    END   shift, and go to state 733
    '+'   shift, and go to state 317
    '-'   shift, and go to state 318


state 702

   86 constraint: VIF vbool THEN cexpr con_type vexpr . ELSE vexpr con_type vexpr END con_attr_list
   91           | VIF vbool THEN cexpr con_type vexpr . ELSE cexpr con_type vexpr END con_attr_list
   92           | VIF vbool THEN cexpr con_type vexpr . ELSE vexpr con_type cexpr END con_attr_list
   98           | VIF vbool THEN cexpr con_type vexpr . ELSE cexpr con_type cexpr END con_attr_list
  102           | VIF vbool THEN cexpr con_type vexpr . END con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    ELSE  shift, and go to state 734
    END   shift, and go to state 735
    '+'   shift, and go to state 311
    '-'   shift, and go to state 312


state 703

   90 constraint: VIF vbool THEN cexpr con_type cexpr . ELSE vexpr con_type vexpr END con_attr_list
   96           | VIF vbool THEN cexpr con_type cexpr . ELSE cexpr con_type vexpr END con_attr_list
   97           | VIF vbool THEN cexpr con_type cexpr . ELSE vexpr con_type cexpr END con_attr_list
  100           | VIF vbool THEN cexpr con_type cexpr . ELSE cexpr con_type cexpr END con_attr_list
  104           | VIF vbool THEN cexpr con_type cexpr . END con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    ELSE  shift, and go to state 736
    END   shift, and go to state 737
    '+'   shift, and go to state 317
    '-'   shift, and go to state 318


state 704

  130 con_attr: SCALE .

    $default  reduce using rule 130 (con_attr)


state 705

  131 con_attr: SEPARATE .

    $default  reduce using rule 131 (con_attr)


state 706

  132 con_attr: CHECKONLY .

    $default  reduce using rule 132 (con_attr)


state 707

  133 con_attr: INDICATOR .

    $default  reduce using rule 133 (con_attr)


state 708

  129 con_attr_list: con_attr_list ',' con_attr .

    $default  reduce using rule 129 (con_attr_list)


state 709

   81 constraint: cexpr con_type vexpr CMP_LE cexpr con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 81 (constraint)


state 710

   83 constraint: cexpr con_type vexpr CMP_GE cexpr con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 83 (constraint)


state 711

   82 constraint: cexpr con_type cexpr CMP_LE cexpr con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 82 (constraint)


state 712

   84 constraint: cexpr con_type cexpr CMP_GE cexpr con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 84 (constraint)


state 713

  197 sval: ARGMIN '(' cexpr ')' idxset DO cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 197 (sval)


state 714

  199 sval: ARGMAX '(' cexpr ')' idxset DO cexpr .
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240

    $default  reduce using rule 199 (sval)


state 715

  208 sval: IF lexpr THEN sexpr ELSE sexpr END .

    $default  reduce using rule 208 (sval)


state 716

  286 cval: IF lexpr THEN cexpr ELSE cexpr END .

    $default  reduce using rule 286 (cval)


state 717

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  287 cval: ORD '(' sexpr ',' cexpr ',' cexpr . ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 738


state 718

  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct
  284 cval: SUBSTR '(' cexpr ',' cexpr ',' cexpr . ')'

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 739


state 719

  192 sval: '{' cexpr TO cexpr BY cexpr '}' .

    $default  reduce using rule 192 (sval)


state 720

  194 sval: '{' cexpr UNTIL cexpr BY cexpr '}' .

    $default  reduce using rule 194 (sval)


state 721

  238 lexpr: IF lexpr THEN lexpr ELSE lexpr END .

    $default  reduce using rule 238 (lexpr)


state 722

   18 set_entry_list: SUBSETS '(' sexpr ',' cexpr . ')'
   19               | SUBSETS '(' sexpr ',' cexpr . ',' cexpr ')'
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ','  shift, and go to state 740
    ')'  shift, and go to state 741


state 723

   51 lower: CMP_GE IF lexpr THEN '-' INFTY ELSE . cexpr END

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 742
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 724

   50 lower: CMP_GE IF lexpr THEN cexpr ELSE '-' . INFTY END
  256 cfactor: '-' . cexpo

    INFTY    shift, and go to state 743
    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '('      shift, and go to state 132

    cexpo  go to state 220
    cval   go to state 109


state 725

   56 upper: CMP_LE IF lexpr THEN INFTY ELSE . cexpr END

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 744
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 726

   55 upper: CMP_LE IF lexpr THEN cexpr ELSE . INFTY END
  286 cval: IF lexpr THEN cexpr ELSE . cexpr END

    INFTY    shift, and go to state 745
    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 678
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 727

   42 decl_var: DECLVAR NAME '[' idxset ']' INTEGER lower upper priority startval . ';'

    ';'  shift, and go to state 746


state 728

  157 vval: IF lexpr THEN vexpr ELSE vexpr END .

    $default  reduce using rule 157 (vval)


state 729

   76 constraint_list: IF lexpr THEN constraint_list ELSE constraint_list END .

    $default  reduce using rule 76 (constraint_list)


state 730

   85 constraint: VIF vbool THEN vexpr con_type vexpr ELSE . vexpr con_type vexpr END con_attr_list
   88           | VIF vbool THEN vexpr con_type vexpr ELSE . cexpr con_type vexpr END con_attr_list
   89           | VIF vbool THEN vexpr con_type vexpr ELSE . vexpr con_type cexpr END con_attr_list
   95           | VIF vbool THEN vexpr con_type vexpr ELSE . cexpr con_type cexpr END con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 747
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 748
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 731

  101 constraint: VIF vbool THEN vexpr con_type vexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 749


state 732

   87 constraint: VIF vbool THEN vexpr con_type cexpr ELSE . vexpr con_type vexpr END con_attr_list
   93           | VIF vbool THEN vexpr con_type cexpr ELSE . cexpr con_type vexpr END con_attr_list
   94           | VIF vbool THEN vexpr con_type cexpr ELSE . vexpr con_type cexpr END con_attr_list
   99           | VIF vbool THEN vexpr con_type cexpr ELSE . cexpr con_type cexpr END con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 750
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 751
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 733

  103 constraint: VIF vbool THEN vexpr con_type cexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 752


state 734

   86 constraint: VIF vbool THEN cexpr con_type vexpr ELSE . vexpr con_type vexpr END con_attr_list
   91           | VIF vbool THEN cexpr con_type vexpr ELSE . cexpr con_type vexpr END con_attr_list
   92           | VIF vbool THEN cexpr con_type vexpr ELSE . vexpr con_type cexpr END con_attr_list
   98           | VIF vbool THEN cexpr con_type vexpr ELSE . cexpr con_type cexpr END con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 753
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 754
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 735

  102 constraint: VIF vbool THEN cexpr con_type vexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 755


state 736

   90 constraint: VIF vbool THEN cexpr con_type cexpr ELSE . vexpr con_type vexpr END con_attr_list
   96           | VIF vbool THEN cexpr con_type cexpr ELSE . cexpr con_type vexpr END con_attr_list
   97           | VIF vbool THEN cexpr con_type cexpr ELSE . vexpr con_type cexpr END con_attr_list
  100           | VIF vbool THEN cexpr con_type cexpr ELSE . cexpr con_type cexpr END con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 756
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 757
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 737

  104 constraint: VIF vbool THEN cexpr con_type cexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 758


state 738

  287 cval: ORD '(' sexpr ',' cexpr ',' cexpr ')' .

    $default  reduce using rule 287 (cval)


state 739

  284 cval: SUBSTR '(' cexpr ',' cexpr ',' cexpr ')' .

    $default  reduce using rule 284 (cval)


state 740

   19 set_entry_list: SUBSETS '(' sexpr ',' cexpr ',' . cexpr ')'

    SUM      shift, and go to state 60
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 130
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 95
    '-'      shift, and go to state 96
    '('      shift, and go to state 132

    cexpr     go to state 759
    cproduct  go to state 106
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 741

   18 set_entry_list: SUBSETS '(' sexpr ',' cexpr ')' .

    $default  reduce using rule 18 (set_entry_list)


state 742

   51 lower: CMP_GE IF lexpr THEN '-' INFTY ELSE cexpr . END
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    END  shift, and go to state 760
    '+'  shift, and go to state 239
    '-'  shift, and go to state 240


state 743

   50 lower: CMP_GE IF lexpr THEN cexpr ELSE '-' INFTY . END

    END  shift, and go to state 761


state 744

   56 upper: CMP_LE IF lexpr THEN INFTY ELSE cexpr . END
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    END  shift, and go to state 762
    '+'  shift, and go to state 239
    '-'  shift, and go to state 240


state 745

   55 upper: CMP_LE IF lexpr THEN cexpr ELSE INFTY . END

    END  shift, and go to state 763


state 746

   42 decl_var: DECLVAR NAME '[' idxset ']' INTEGER lower upper priority startval ';' .

    $default  reduce using rule 42 (decl_var)


state 747

   85 constraint: VIF vbool THEN vexpr con_type vexpr ELSE vexpr . con_type vexpr END con_attr_list
   89           | VIF vbool THEN vexpr con_type vexpr ELSE vexpr . con_type cexpr END con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 330
    CMP_GE  shift, and go to state 331
    CMP_EQ  shift, and go to state 332
    '+'     shift, and go to state 311
    '-'     shift, and go to state 312

    con_type  go to state 764


state 748

   88 constraint: VIF vbool THEN vexpr con_type vexpr ELSE cexpr . con_type vexpr END con_attr_list
   95           | VIF vbool THEN vexpr con_type vexpr ELSE cexpr . con_type cexpr END con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 330
    CMP_GE  shift, and go to state 331
    CMP_EQ  shift, and go to state 332
    '+'     shift, and go to state 317
    '-'     shift, and go to state 318

    con_type  go to state 765


state 749

  101 constraint: VIF vbool THEN vexpr con_type vexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 101 (constraint)


state 750

   87 constraint: VIF vbool THEN vexpr con_type cexpr ELSE vexpr . con_type vexpr END con_attr_list
   94           | VIF vbool THEN vexpr con_type cexpr ELSE vexpr . con_type cexpr END con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 330
    CMP_GE  shift, and go to state 331
    CMP_EQ  shift, and go to state 332
    '+'     shift, and go to state 311
    '-'     shift, and go to state 312

    con_type  go to state 766


state 751

   93 constraint: VIF vbool THEN vexpr con_type cexpr ELSE cexpr . con_type vexpr END con_attr_list
   99           | VIF vbool THEN vexpr con_type cexpr ELSE cexpr . con_type cexpr END con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 330
    CMP_GE  shift, and go to state 331
    CMP_EQ  shift, and go to state 332
    '+'     shift, and go to state 317
    '-'     shift, and go to state 318

    con_type  go to state 767


state 752

  103 constraint: VIF vbool THEN vexpr con_type cexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 103 (constraint)


state 753

   86 constraint: VIF vbool THEN cexpr con_type vexpr ELSE vexpr . con_type vexpr END con_attr_list
   92           | VIF vbool THEN cexpr con_type vexpr ELSE vexpr . con_type cexpr END con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 330
    CMP_GE  shift, and go to state 331
    CMP_EQ  shift, and go to state 332
    '+'     shift, and go to state 311
    '-'     shift, and go to state 312

    con_type  go to state 768


state 754

   91 constraint: VIF vbool THEN cexpr con_type vexpr ELSE cexpr . con_type vexpr END con_attr_list
   98           | VIF vbool THEN cexpr con_type vexpr ELSE cexpr . con_type cexpr END con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 330
    CMP_GE  shift, and go to state 331
    CMP_EQ  shift, and go to state 332
    '+'     shift, and go to state 317
    '-'     shift, and go to state 318

    con_type  go to state 769


state 755

  102 constraint: VIF vbool THEN cexpr con_type vexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 102 (constraint)


state 756

   90 constraint: VIF vbool THEN cexpr con_type cexpr ELSE vexpr . con_type vexpr END con_attr_list
   97           | VIF vbool THEN cexpr con_type cexpr ELSE vexpr . con_type cexpr END con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    CMP_LE  shift, and go to state 330
    CMP_GE  shift, and go to state 331
    CMP_EQ  shift, and go to state 332
    '+'     shift, and go to state 311
    '-'     shift, and go to state 312

    con_type  go to state 770


state 757

   96 constraint: VIF vbool THEN cexpr con_type cexpr ELSE cexpr . con_type vexpr END con_attr_list
  100           | VIF vbool THEN cexpr con_type cexpr ELSE cexpr . con_type cexpr END con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    CMP_LE  shift, and go to state 330
    CMP_GE  shift, and go to state 331
    CMP_EQ  shift, and go to state 332
    '+'     shift, and go to state 317
    '-'     shift, and go to state 318

    con_type  go to state 771


state 758

  104 constraint: VIF vbool THEN cexpr con_type cexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 104 (constraint)


state 759

   19 set_entry_list: SUBSETS '(' sexpr ',' cexpr ',' cexpr . ')'
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    '+'  shift, and go to state 239
    '-'  shift, and go to state 240
    ')'  shift, and go to state 772


state 760

   51 lower: CMP_GE IF lexpr THEN '-' INFTY ELSE cexpr END .

    $default  reduce using rule 51 (lower)


state 761

   50 lower: CMP_GE IF lexpr THEN cexpr ELSE '-' INFTY END .

    $default  reduce using rule 50 (lower)


state 762

   56 upper: CMP_LE IF lexpr THEN INFTY ELSE cexpr END .

    $default  reduce using rule 56 (upper)


state 763

   55 upper: CMP_LE IF lexpr THEN cexpr ELSE INFTY END .

    $default  reduce using rule 55 (upper)


state 764

   85 constraint: VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type . vexpr END con_attr_list
   89           | VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type . cexpr END con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 773
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 774
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 765

   88 constraint: VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type . vexpr END con_attr_list
   95           | VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type . cexpr END con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 775
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 776
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 766

   87 constraint: VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type . vexpr END con_attr_list
   94           | VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type . cexpr END con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 777
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 778
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 767

   93 constraint: VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type . vexpr END con_attr_list
   99           | VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type . cexpr END con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 779
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 780
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 768

   86 constraint: VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type . vexpr END con_attr_list
   92           | VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type . cexpr END con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 781
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 782
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 769

   91 constraint: VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type . vexpr END con_attr_list
   98           | VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type . cexpr END con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 783
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 784
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 770

   90 constraint: VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type . vexpr END con_attr_list
   97           | VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type . cexpr END con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 785
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 786
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 771

   96 constraint: VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type . vexpr END con_attr_list
  100           | VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type . cexpr END con_attr_list

    SUM      shift, and go to state 149
    MIN      shift, and go to state 61
    MAX      shift, and go to state 62
    PROD     shift, and go to state 65
    IF       shift, and go to state 150
    CARD     shift, and go to state 70
    ABS      shift, and go to state 71
    SGN      shift, and go to state 72
    ROUND    shift, and go to state 73
    FLOOR    shift, and go to state 74
    CEIL     shift, and go to state 75
    LOG      shift, and go to state 76
    LN       shift, and go to state 77
    EXP      shift, and go to state 78
    SQRT     shift, and go to state 79
    RANDOM   shift, and go to state 80
    ORD      shift, and go to state 81
    VABS     shift, and go to state 151
    LENGTH   shift, and go to state 83
    SUBSTR   shift, and go to state 84
    NUMBSYM  shift, and go to state 85
    STRGSYM  shift, and go to state 86
    VARSYM   shift, and go to state 152
    NUMBDEF  shift, and go to state 89
    STRGDEF  shift, and go to state 90
    NAME     shift, and go to state 92
    STRG     shift, and go to state 93
    NUMB     shift, and go to state 94
    '+'      shift, and go to state 153
    '-'      shift, and go to state 154
    '('      shift, and go to state 155

    vexpr     go to state 787
    vproduct  go to state 157
    vfactor   go to state 158
    vexpo     go to state 159
    vval      go to state 160
    cexpr     go to state 788
    cproduct  go to state 162
    cfactor   go to state 107
    cexpo     go to state 108
    cval      go to state 109


state 772

   19 set_entry_list: SUBSETS '(' sexpr ',' cexpr ',' cexpr ')' .

    $default  reduce using rule 19 (set_entry_list)


state 773

   85 constraint: VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type vexpr . END con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    END  shift, and go to state 789
    '+'  shift, and go to state 311
    '-'  shift, and go to state 312


state 774

   89 constraint: VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type cexpr . END con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    END  shift, and go to state 790
    '+'  shift, and go to state 317
    '-'  shift, and go to state 318


state 775

   88 constraint: VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type vexpr . END con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    END  shift, and go to state 791
    '+'  shift, and go to state 311
    '-'  shift, and go to state 312


state 776

   95 constraint: VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type cexpr . END con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    END  shift, and go to state 792
    '+'  shift, and go to state 317
    '-'  shift, and go to state 318


state 777

   87 constraint: VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type vexpr . END con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    END  shift, and go to state 793
    '+'  shift, and go to state 311
    '-'  shift, and go to state 312


state 778

   94 constraint: VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type cexpr . END con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    END  shift, and go to state 794
    '+'  shift, and go to state 317
    '-'  shift, and go to state 318


state 779

   93 constraint: VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type vexpr . END con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    END  shift, and go to state 795
    '+'  shift, and go to state 311
    '-'  shift, and go to state 312


state 780

   99 constraint: VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type cexpr . END con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    END  shift, and go to state 796
    '+'  shift, and go to state 317
    '-'  shift, and go to state 318


state 781

   86 constraint: VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type vexpr . END con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    END  shift, and go to state 797
    '+'  shift, and go to state 311
    '-'  shift, and go to state 312


state 782

   92 constraint: VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type cexpr . END con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    END  shift, and go to state 798
    '+'  shift, and go to state 317
    '-'  shift, and go to state 318


state 783

   91 constraint: VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type vexpr . END con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    END  shift, and go to state 799
    '+'  shift, and go to state 311
    '-'  shift, and go to state 312


state 784

   98 constraint: VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type cexpr . END con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    END  shift, and go to state 800
    '+'  shift, and go to state 317
    '-'  shift, and go to state 318


state 785

   90 constraint: VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type vexpr . END con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    END  shift, and go to state 801
    '+'  shift, and go to state 311
    '-'  shift, and go to state 312


state 786

   97 constraint: VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type cexpr . END con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    END  shift, and go to state 802
    '+'  shift, and go to state 317
    '-'  shift, and go to state 318


state 787

   96 constraint: VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type vexpr . END con_attr_list
  138 vexpr: vexpr . '+' vproduct
  139      | vexpr . '-' vproduct
  140      | vexpr . '+' cproduct
  141      | vexpr . '-' cproduct

    END  shift, and go to state 803
    '+'  shift, and go to state 311
    '-'  shift, and go to state 312


state 788

  100 constraint: VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type cexpr . END con_attr_list
  142 vexpr: cexpr . '+' vproduct
  143      | cexpr . '-' vproduct
  246 cexpr: cexpr . '+' cproduct
  247      | cexpr . '-' cproduct

    END  shift, and go to state 804
    '+'  shift, and go to state 317
    '-'  shift, and go to state 318


state 789

   85 constraint: VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type vexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 805


state 790

   89 constraint: VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type cexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 806


state 791

   88 constraint: VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type vexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 807


state 792

   95 constraint: VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type cexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 808


state 793

   87 constraint: VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type vexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 809


state 794

   94 constraint: VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type cexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 810


state 795

   93 constraint: VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type vexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 811


state 796

   99 constraint: VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type cexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 812


state 797

   86 constraint: VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type vexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 813


state 798

   92 constraint: VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type cexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 814


state 799

   91 constraint: VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type vexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 815


state 800

   98 constraint: VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type cexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 816


state 801

   90 constraint: VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type vexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 817


state 802

   97 constraint: VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type cexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 818


state 803

   96 constraint: VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type vexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 819


state 804

  100 constraint: VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type cexpr END . con_attr_list

    $default  reduce using rule 128 (con_attr_list)

    con_attr_list  go to state 820


state 805

   85 constraint: VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type vexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 85 (constraint)


state 806

   89 constraint: VIF vbool THEN vexpr con_type vexpr ELSE vexpr con_type cexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 89 (constraint)


state 807

   88 constraint: VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type vexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 88 (constraint)


state 808

   95 constraint: VIF vbool THEN vexpr con_type vexpr ELSE cexpr con_type cexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 95 (constraint)


state 809

   87 constraint: VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type vexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 87 (constraint)


state 810

   94 constraint: VIF vbool THEN vexpr con_type cexpr ELSE vexpr con_type cexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 94 (constraint)


state 811

   93 constraint: VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type vexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 93 (constraint)


state 812

   99 constraint: VIF vbool THEN vexpr con_type cexpr ELSE cexpr con_type cexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 99 (constraint)


state 813

   86 constraint: VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type vexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 86 (constraint)


state 814

   92 constraint: VIF vbool THEN cexpr con_type vexpr ELSE vexpr con_type cexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 92 (constraint)


state 815

   91 constraint: VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type vexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 91 (constraint)


state 816

   98 constraint: VIF vbool THEN cexpr con_type vexpr ELSE cexpr con_type cexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 98 (constraint)


state 817

   90 constraint: VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type vexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 90 (constraint)


state 818

   97 constraint: VIF vbool THEN cexpr con_type cexpr ELSE vexpr con_type cexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 97 (constraint)


state 819

   96 constraint: VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type vexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 96 (constraint)


state 820

  100 constraint: VIF vbool THEN cexpr con_type cexpr ELSE cexpr con_type cexpr END con_attr_list .
  129 con_attr_list: con_attr_list . ',' con_attr

    ','  shift, and go to state 666

    $default  reduce using rule 100 (constraint)
